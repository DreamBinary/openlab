2023-02-11 11:35:17,446 - mmseg - INFO - Multi-processing start method is `None`
2023-02-11 11:35:17,446 - mmseg - INFO - OpenCV num_threads is `24
2023-02-11 11:35:17,483 - mmseg - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.13 (default, Mar 28 2022, 11:38:47) [GCC 7.5.0]
CUDA available: True
GPU 0: NVIDIA GeForce RTX 3090
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 11.1, V11.1.105
GCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
PyTorch: 1.8.2+cu111
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.0.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.2, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.9.2+cu111
OpenCV: 4.5.3
MMCV: 1.5.3
MMCV Compiler: GCC 7.3
MMCV CUDA Compiler: 11.1
MMSegmentation: 0.26.0+
------------------------------------------------------------

2023-02-11 11:35:17,484 - mmseg - INFO - Distributed training: False
2023-02-11 11:35:17,701 - mmseg - INFO - Config:
norm_cfg = dict(type='SyncBN', requires_grad=True)
model = dict(
    type='EncoderDecoder',
    pretrained='open-mmlab://resnet50_v1c',
    backbone=dict(
        type='ResNetV1c',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        dilations=(1, 1, 2, 4),
        strides=(1, 2, 1, 1),
        norm_cfg=dict(type='SyncBN', requires_grad=True),
        norm_eval=False,
        style='pytorch',
        contract_dilation=True),
    decode_head=dict(
        type='PSPHead',
        in_channels=2048,
        in_index=3,
        channels=512,
        pool_scales=(1, 2, 3, 6),
        dropout_ratio=0.1,
        num_classes=21,
        norm_cfg=dict(type='SyncBN', requires_grad=True),
        align_corners=False,
        loss_decode=dict(
            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),
    auxiliary_head=dict(
        type='FCNHead',
        in_channels=1024,
        in_index=2,
        channels=256,
        num_convs=1,
        concat_input=False,
        dropout_ratio=0.1,
        num_classes=21,
        norm_cfg=dict(type='SyncBN', requires_grad=True),
        align_corners=False,
        loss_decode=dict(
            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=0.4)),
    train_cfg=dict(),
    test_cfg=dict(mode='whole'))
dataset_type = 'PascalVOCDataset'
data_root = 'data/VOC2012'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
crop_size = (512, 512)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations'),
    dict(type='Resize', img_scale=(2048, 512), ratio_range=(0.5, 2.0)),
    dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),
    dict(type='RandomFlip', prob=0.5),
    dict(type='PhotoMetricDistortion'),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_semantic_seg'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(2048, 512),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=4,
    workers_per_gpu=4,
    train=dict(
        type='PascalVOCDataset',
        data_root='data/VOC2012',
        img_dir='JPEGImages',
        ann_dir='SegmentationClass',
        split='ImageSets/Segmentation/train.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations'),
            dict(type='Resize', img_scale=(2048, 512), ratio_range=(0.5, 2.0)),
            dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),
            dict(type='RandomFlip', prob=0.5),
            dict(type='PhotoMetricDistortion'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_semantic_seg'])
        ]),
    val=dict(
        type='PascalVOCDataset',
        data_root='data/VOC2012',
        img_dir='JPEGImages',
        ann_dir='SegmentationClass',
        split='ImageSets/Segmentation/val.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(2048, 512),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='PascalVOCDataset',
        data_root='data/VOC2012',
        img_dir='JPEGImages',
        ann_dir='SegmentationClass',
        split='ImageSets/Segmentation/val.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(2048, 512),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
log_config = dict(
    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = 'pspnet_r50-d8_512x512_20k_voc12aug_20200617_101958-ed5dfbd9.pth'
resume_from = None
workflow = [('train', 1)]
cudnn_benchmark = True
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005)
optimizer_config = dict()
lr_config = dict(policy='poly', power=0.9, min_lr=0.0001, by_epoch=False)
runner = dict(type='IterBasedRunner', max_iters=10000)
checkpoint_config = dict(by_epoch=False, interval=1000)
evaluation = dict(interval=1000, metric='mIoU', pre_eval=True)
work_dir = './work_dirs/config_voc'
gpu_ids = range(0, 1)
auto_resume = False

2023-02-11 11:35:17,702 - mmseg - INFO - Set random seed to 31551710, deterministic: False
2023-02-11 11:35:18,118 - mmseg - INFO - initialize ResNetV1c with init_cfg {'type': 'Pretrained', 'checkpoint': 'open-mmlab://resnet50_v1c'}
2023-02-11 11:35:18,385 - mmseg - INFO - initialize PSPHead with init_cfg {'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
2023-02-11 11:35:18,513 - mmseg - INFO - initialize FCNHead with init_cfg {'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
Name of parameter - Initialization information

backbone.stem.0.weight - torch.Size([32, 3, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.stem.1.weight - torch.Size([32]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.stem.1.bias - torch.Size([32]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.stem.3.weight - torch.Size([32, 32, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.stem.4.weight - torch.Size([32]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.stem.4.bias - torch.Size([32]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.stem.6.weight - torch.Size([64, 32, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.stem.7.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.stem.7.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.0.bn1.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.0.bn2.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.0.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.0.bn3.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.0.bn3.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.0.downsample.1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.0.downsample.1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.1.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.1.bn1.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.1.bn2.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.1.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.1.bn3.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.1.bn3.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.2.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.2.bn1.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.2.bn1.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.2.bn2.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.2.bn2.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.2.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.2.bn3.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.2.bn3.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.0.conv1.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.0.bn1.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.0.bn2.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.0.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.0.bn3.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.0.bn3.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.0.downsample.1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.0.downsample.1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.1.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.1.bn1.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.1.bn2.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.1.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.1.bn3.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.1.bn3.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.2.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.2.bn1.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.2.bn1.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.2.bn2.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.2.bn2.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.2.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.2.bn3.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.2.bn3.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.3.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.3.bn1.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.3.bn1.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.3.bn2.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.3.bn2.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.3.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.3.bn3.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.3.bn3.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.0.conv1.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.0.bn1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.0.bn2.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.0.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.0.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.0.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.0.downsample.1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.0.downsample.1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.1.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.1.bn1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.1.bn2.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.1.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.1.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.1.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.2.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.2.bn1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.2.bn1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.2.bn2.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.2.bn2.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.2.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.2.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.2.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.3.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.3.bn1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.3.bn1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.3.bn2.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.3.bn2.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.3.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.3.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.3.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.4.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.4.bn1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.4.bn1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.4.bn2.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.4.bn2.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.4.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.4.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.4.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.5.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.5.bn1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.5.bn1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.5.bn2.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.5.bn2.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.5.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.5.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.5.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.0.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.0.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.0.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.0.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.0.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.0.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.0.downsample.1.weight - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.0.downsample.1.bias - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.1.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.1.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.1.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.1.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.1.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.1.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.2.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.2.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.2.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.2.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.2.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.2.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.2.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.2.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

decode_head.conv_seg.weight - torch.Size([21, 512, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.conv_seg.bias - torch.Size([21]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.psp_modules.0.1.conv.weight - torch.Size([512, 2048, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.0.1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.0.1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.1.1.conv.weight - torch.Size([512, 2048, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.1.1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.1.1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.2.1.conv.weight - torch.Size([512, 2048, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.2.1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.2.1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.3.1.conv.weight - torch.Size([512, 2048, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.3.1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.3.1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.bottleneck.conv.weight - torch.Size([512, 4096, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.bottleneck.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.bottleneck.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.conv_seg.weight - torch.Size([21, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

auxiliary_head.conv_seg.bias - torch.Size([21]): 
NormalInit: mean=0, std=0.01, bias=0 

auxiliary_head.convs.0.conv.weight - torch.Size([256, 1024, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.convs.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.convs.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  
2023-02-11 11:35:18,522 - mmseg - INFO - EncoderDecoder(
  (backbone): ResNetV1c(
    (stem): Sequential(
      (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (1): _BatchNormXd(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): _BatchNormXd(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
      (6): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (7): _BatchNormXd(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): ReLU(inplace=True)
    )
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): ResLayer(
      (0): Bottleneck(
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): _BatchNormXd(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): _BatchNormXd(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): _BatchNormXd(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): _BatchNormXd(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): _BatchNormXd(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): _BatchNormXd(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): _BatchNormXd(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): _BatchNormXd(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): _BatchNormXd(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): _BatchNormXd(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer2): ResLayer(
      (0): Bottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): _BatchNormXd(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): _BatchNormXd(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): _BatchNormXd(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): _BatchNormXd(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): _BatchNormXd(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): _BatchNormXd(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): _BatchNormXd(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): _BatchNormXd(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): _BatchNormXd(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): _BatchNormXd(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): _BatchNormXd(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): _BatchNormXd(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): _BatchNormXd(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer3): ResLayer(
      (0): Bottleneck(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): _BatchNormXd(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): _BatchNormXd(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): _BatchNormXd(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): _BatchNormXd(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): _BatchNormXd(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): _BatchNormXd(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): _BatchNormXd(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): _BatchNormXd(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): _BatchNormXd(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): _BatchNormXd(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): _BatchNormXd(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): _BatchNormXd(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): _BatchNormXd(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): _BatchNormXd(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): _BatchNormXd(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): _BatchNormXd(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (5): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): _BatchNormXd(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): _BatchNormXd(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): _BatchNormXd(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer4): ResLayer(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): _BatchNormXd(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): _BatchNormXd(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): _BatchNormXd(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): _BatchNormXd(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): _BatchNormXd(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
        (bn2): _BatchNormXd(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): _BatchNormXd(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): _BatchNormXd(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
        (bn2): _BatchNormXd(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): _BatchNormXd(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
  )
  init_cfg={'type': 'Pretrained', 'checkpoint': 'open-mmlab://resnet50_v1c'}
  (decode_head): PSPHead(
    input_transform=None, ignore_index=255, align_corners=False
    (loss_decode): CrossEntropyLoss(avg_non_ignore=False)
    (conv_seg): Conv2d(512, 21, kernel_size=(1, 1), stride=(1, 1))
    (dropout): Dropout2d(p=0.1, inplace=False)
    (psp_modules): PPM(
      (0): Sequential(
        (0): AdaptiveAvgPool2d(output_size=1)
        (1): ConvModule(
          (conv): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): _BatchNormXd(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
      (1): Sequential(
        (0): AdaptiveAvgPool2d(output_size=2)
        (1): ConvModule(
          (conv): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): _BatchNormXd(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
      (2): Sequential(
        (0): AdaptiveAvgPool2d(output_size=3)
        (1): ConvModule(
          (conv): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): _BatchNormXd(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
      (3): Sequential(
        (0): AdaptiveAvgPool2d(output_size=6)
        (1): ConvModule(
          (conv): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): _BatchNormXd(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
    )
    (bottleneck): ConvModule(
      (conv): Conv2d(4096, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): _BatchNormXd(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activate): ReLU(inplace=True)
    )
  )
  init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
  (auxiliary_head): FCNHead(
    input_transform=None, ignore_index=255, align_corners=False
    (loss_decode): CrossEntropyLoss(avg_non_ignore=False)
    (conv_seg): Conv2d(256, 21, kernel_size=(1, 1), stride=(1, 1))
    (dropout): Dropout2d(p=0.1, inplace=False)
    (convs): Sequential(
      (0): ConvModule(
        (conv): Conv2d(1024, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): _BatchNormXd(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
    )
  )
  init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
)
2023-02-11 11:35:18,530 - mmseg - INFO - Loaded 1464 images
2023-02-11 11:35:20,964 - mmseg - INFO - Loaded 1449 images
2023-02-11 11:35:20,965 - mmseg - INFO - load checkpoint from local path: pspnet_r50-d8_512x512_20k_voc12aug_20200617_101958-ed5dfbd9.pth
2023-02-11 11:35:21,433 - mmseg - INFO - Start running, host: root@fivv-un65e5mg89rk-main, work_dir: /output/work_dirs/config_voc
2023-02-11 11:35:21,433 - mmseg - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2023-02-11 11:35:21,434 - mmseg - INFO - workflow: [('train', 1)], max: 10000 iters
2023-02-11 11:35:21,434 - mmseg - INFO - Checkpoints will be saved to /output/work_dirs/config_voc by HardDiskBackend.
2023-02-11 11:35:42,559 - mmseg - INFO - Iter [50/10000]	lr: 9.956e-03, eta: 1:07:51, time: 0.409, data_time: 0.005, memory: 19893, decode.loss_ce: 1.1408, decode.acc_seg: 69.8358, aux.loss_ce: 0.5121, aux.acc_seg: 65.2173, loss: 1.6529
2023-02-11 11:35:59,296 - mmseg - INFO - Iter [100/10000]	lr: 9.912e-03, eta: 1:01:22, time: 0.335, data_time: 0.003, memory: 19893, decode.loss_ce: 1.4321, decode.acc_seg: 64.8694, aux.loss_ce: 0.5605, aux.acc_seg: 64.6473, loss: 1.9926
2023-02-11 11:36:16,145 - mmseg - INFO - Iter [150/10000]	lr: 9.867e-03, eta: 0:59:09, time: 0.337, data_time: 0.003, memory: 19893, decode.loss_ce: 1.4340, decode.acc_seg: 62.4632, aux.loss_ce: 0.5564, aux.acc_seg: 62.0314, loss: 1.9904
2023-02-11 11:36:33,040 - mmseg - INFO - Iter [200/10000]	lr: 9.823e-03, eta: 0:57:56, time: 0.338, data_time: 0.003, memory: 19893, decode.loss_ce: 1.4099, decode.acc_seg: 63.2598, aux.loss_ce: 0.5546, aux.acc_seg: 63.1819, loss: 1.9644
2023-02-11 11:36:49,967 - mmseg - INFO - Iter [250/10000]	lr: 9.778e-03, eta: 0:57:06, time: 0.339, data_time: 0.003, memory: 19893, decode.loss_ce: 1.2853, decode.acc_seg: 64.7946, aux.loss_ce: 0.4917, aux.acc_seg: 64.8009, loss: 1.7770
2023-02-11 11:37:06,917 - mmseg - INFO - Iter [300/10000]	lr: 9.733e-03, eta: 0:56:29, time: 0.339, data_time: 0.003, memory: 19893, decode.loss_ce: 1.2687, decode.acc_seg: 65.2593, aux.loss_ce: 0.5022, aux.acc_seg: 65.2961, loss: 1.7709
2023-02-11 11:37:23,910 - mmseg - INFO - Iter [350/10000]	lr: 9.688e-03, eta: 0:55:58, time: 0.340, data_time: 0.003, memory: 19893, decode.loss_ce: 1.2340, decode.acc_seg: 65.5561, aux.loss_ce: 0.4869, aux.acc_seg: 65.8274, loss: 1.7209
2023-02-11 11:37:43,006 - mmseg - INFO - Iter [400/10000]	lr: 9.644e-03, eta: 0:56:21, time: 0.382, data_time: 0.046, memory: 19893, decode.loss_ce: 1.2576, decode.acc_seg: 63.5320, aux.loss_ce: 0.4959, aux.acc_seg: 63.7103, loss: 1.7534
2023-02-11 11:38:00,002 - mmseg - INFO - Iter [450/10000]	lr: 9.599e-03, eta: 0:55:51, time: 0.340, data_time: 0.003, memory: 19893, decode.loss_ce: 1.2555, decode.acc_seg: 63.2254, aux.loss_ce: 0.5027, aux.acc_seg: 63.3776, loss: 1.7582
2023-02-11 11:38:16,997 - mmseg - INFO - Iter [500/10000]	lr: 9.554e-03, eta: 0:55:23, time: 0.340, data_time: 0.003, memory: 19893, decode.loss_ce: 1.2124, decode.acc_seg: 64.7018, aux.loss_ce: 0.4810, aux.acc_seg: 64.8152, loss: 1.6934
2023-02-11 11:38:33,996 - mmseg - INFO - Iter [550/10000]	lr: 9.509e-03, eta: 0:54:57, time: 0.340, data_time: 0.003, memory: 19893, decode.loss_ce: 1.1734, decode.acc_seg: 64.6368, aux.loss_ce: 0.4751, aux.acc_seg: 64.8942, loss: 1.6485
2023-02-11 11:38:51,008 - mmseg - INFO - Iter [600/10000]	lr: 9.465e-03, eta: 0:54:32, time: 0.340, data_time: 0.003, memory: 19893, decode.loss_ce: 1.2389, decode.acc_seg: 64.6414, aux.loss_ce: 0.5118, aux.acc_seg: 64.4183, loss: 1.7507
2023-02-11 11:39:08,012 - mmseg - INFO - Iter [650/10000]	lr: 9.420e-03, eta: 0:54:09, time: 0.340, data_time: 0.004, memory: 19893, decode.loss_ce: 1.1814, decode.acc_seg: 64.1425, aux.loss_ce: 0.4869, aux.acc_seg: 64.4201, loss: 1.6683
2023-02-11 11:39:25,022 - mmseg - INFO - Iter [700/10000]	lr: 9.375e-03, eta: 0:53:47, time: 0.340, data_time: 0.004, memory: 19893, decode.loss_ce: 1.1240, decode.acc_seg: 66.3384, aux.loss_ce: 0.4679, aux.acc_seg: 65.8157, loss: 1.5919
2023-02-11 11:39:44,093 - mmseg - INFO - Iter [750/10000]	lr: 9.330e-03, eta: 0:53:51, time: 0.381, data_time: 0.046, memory: 19893, decode.loss_ce: 1.0809, decode.acc_seg: 66.4150, aux.loss_ce: 0.4572, aux.acc_seg: 66.5625, loss: 1.5381
2023-02-11 11:40:01,129 - mmseg - INFO - Iter [800/10000]	lr: 9.285e-03, eta: 0:53:28, time: 0.341, data_time: 0.004, memory: 19893, decode.loss_ce: 1.0654, decode.acc_seg: 67.7984, aux.loss_ce: 0.4386, aux.acc_seg: 67.1479, loss: 1.5040
2023-02-11 11:40:18,162 - mmseg - INFO - Iter [850/10000]	lr: 9.240e-03, eta: 0:53:07, time: 0.341, data_time: 0.004, memory: 19893, decode.loss_ce: 1.1150, decode.acc_seg: 63.2535, aux.loss_ce: 0.4744, aux.acc_seg: 62.7810, loss: 1.5894
2023-02-11 11:40:35,182 - mmseg - INFO - Iter [900/10000]	lr: 9.195e-03, eta: 0:52:45, time: 0.340, data_time: 0.004, memory: 19893, decode.loss_ce: 1.0015, decode.acc_seg: 68.4737, aux.loss_ce: 0.4294, aux.acc_seg: 67.3523, loss: 1.4308
2023-02-11 11:40:52,198 - mmseg - INFO - Iter [950/10000]	lr: 9.150e-03, eta: 0:52:24, time: 0.340, data_time: 0.004, memory: 19893, decode.loss_ce: 0.9971, decode.acc_seg: 68.1684, aux.loss_ce: 0.4408, aux.acc_seg: 66.6383, loss: 1.4379
2023-02-11 11:41:09,231 - mmseg - INFO - Saving checkpoint at 1000 iterations
2023-02-11 11:41:10,010 - mmseg - INFO - Exp name: config_voc.py
2023-02-11 11:41:10,010 - mmseg - INFO - Iter [1000/10000]	lr: 9.105e-03, eta: 0:52:11, time: 0.357, data_time: 0.004, memory: 19893, decode.loss_ce: 0.9401, decode.acc_seg: 69.4387, aux.loss_ce: 0.4111, aux.acc_seg: 68.3190, loss: 1.3512
2023-02-11 11:43:21,027 - mmseg - INFO - per class results:
2023-02-11 11:43:21,028 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  background | 78.67 |  94.3 |
|  aeroplane  |  17.1 | 72.54 |
|   bicycle   |  2.35 |  2.38 |
|     bird    |  6.92 | 16.79 |
|     boat    |  13.6 | 22.03 |
|    bottle   |  0.33 |  0.33 |
|     bus     | 35.12 |  50.2 |
|     car     | 18.78 | 35.34 |
|     cat     | 17.76 | 41.57 |
|    chair    |  0.31 |  0.31 |
|     cow     |  0.02 |  0.02 |
| diningtable |  0.0  |  0.0  |
|     dog     |  11.2 | 15.46 |
|    horse    |  0.9  |  0.93 |
|  motorbike  |  7.97 |  8.37 |
|    person   | 15.39 | 16.35 |
| pottedplant |  4.16 |  7.68 |
|    sheep    |  8.62 | 10.27 |
|     sofa    |  0.58 |  0.59 |
|    train    |  3.74 |  3.9  |
|  tvmonitor  | 18.22 |  24.0 |
+-------------+-------+-------+
2023-02-11 11:43:21,028 - mmseg - INFO - Summary:
2023-02-11 11:43:21,028 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 74.02 | 12.46 | 20.16 |
+-------+-------+-------+
2023-02-11 11:43:21,028 - mmseg - INFO - Exp name: config_voc.py
2023-02-11 11:43:21,029 - mmseg - INFO - Iter(val) [1449]	aAcc: 0.7402, mIoU: 0.1246, mAcc: 0.2016, IoU.background: 0.7867, IoU.aeroplane: 0.1710, IoU.bicycle: 0.0235, IoU.bird: 0.0692, IoU.boat: 0.1360, IoU.bottle: 0.0033, IoU.bus: 0.3512, IoU.car: 0.1878, IoU.cat: 0.1776, IoU.chair: 0.0031, IoU.cow: 0.0002, IoU.diningtable: 0.0000, IoU.dog: 0.1120, IoU.horse: 0.0090, IoU.motorbike: 0.0797, IoU.person: 0.1539, IoU.pottedplant: 0.0416, IoU.sheep: 0.0862, IoU.sofa: 0.0058, IoU.train: 0.0374, IoU.tvmonitor: 0.1822, Acc.background: 0.9430, Acc.aeroplane: 0.7254, Acc.bicycle: 0.0238, Acc.bird: 0.1679, Acc.boat: 0.2203, Acc.bottle: 0.0033, Acc.bus: 0.5020, Acc.car: 0.3534, Acc.cat: 0.4157, Acc.chair: 0.0031, Acc.cow: 0.0002, Acc.diningtable: 0.0000, Acc.dog: 0.1546, Acc.horse: 0.0093, Acc.motorbike: 0.0837, Acc.person: 0.1635, Acc.pottedplant: 0.0768, Acc.sheep: 0.1027, Acc.sofa: 0.0059, Acc.train: 0.0390, Acc.tvmonitor: 0.2400
2023-02-11 11:43:38,068 - mmseg - INFO - Iter [1050/10000]	lr: 9.060e-03, eta: 1:10:27, time: 2.960, data_time: 2.623, memory: 19893, decode.loss_ce: 1.0375, decode.acc_seg: 65.8533, aux.loss_ce: 0.4651, aux.acc_seg: 64.5303, loss: 1.5027
2023-02-11 11:43:57,195 - mmseg - INFO - Iter [1100/10000]	lr: 9.015e-03, eta: 1:09:27, time: 0.383, data_time: 0.045, memory: 19893, decode.loss_ce: 1.0039, decode.acc_seg: 65.7087, aux.loss_ce: 0.4363, aux.acc_seg: 64.7766, loss: 1.4402
2023-02-11 11:44:14,331 - mmseg - INFO - Iter [1150/10000]	lr: 8.970e-03, eta: 1:08:15, time: 0.343, data_time: 0.003, memory: 19893, decode.loss_ce: 0.9147, decode.acc_seg: 69.8504, aux.loss_ce: 0.4185, aux.acc_seg: 67.4272, loss: 1.3332
2023-02-11 11:44:31,470 - mmseg - INFO - Iter [1200/10000]	lr: 8.925e-03, eta: 1:07:08, time: 0.343, data_time: 0.003, memory: 19893, decode.loss_ce: 0.9570, decode.acc_seg: 69.3018, aux.loss_ce: 0.4397, aux.acc_seg: 66.2577, loss: 1.3967
2023-02-11 11:44:48,621 - mmseg - INFO - Iter [1250/10000]	lr: 8.880e-03, eta: 1:06:05, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.9601, decode.acc_seg: 67.8758, aux.loss_ce: 0.4466, aux.acc_seg: 65.0997, loss: 1.4067
2023-02-11 11:45:05,782 - mmseg - INFO - Iter [1300/10000]	lr: 8.835e-03, eta: 1:05:06, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.9203, decode.acc_seg: 70.7020, aux.loss_ce: 0.4294, aux.acc_seg: 66.7807, loss: 1.3496
2023-02-11 11:45:22,930 - mmseg - INFO - Iter [1350/10000]	lr: 8.790e-03, eta: 1:04:09, time: 0.343, data_time: 0.003, memory: 19893, decode.loss_ce: 0.8656, decode.acc_seg: 70.9929, aux.loss_ce: 0.4116, aux.acc_seg: 67.7247, loss: 1.2772
2023-02-11 11:45:40,082 - mmseg - INFO - Iter [1400/10000]	lr: 8.744e-03, eta: 1:03:16, time: 0.343, data_time: 0.003, memory: 19893, decode.loss_ce: 0.8189, decode.acc_seg: 74.5502, aux.loss_ce: 0.3709, aux.acc_seg: 72.3353, loss: 1.1899
2023-02-11 11:45:57,242 - mmseg - INFO - Iter [1450/10000]	lr: 8.699e-03, eta: 1:02:25, time: 0.343, data_time: 0.003, memory: 19893, decode.loss_ce: 0.8483, decode.acc_seg: 71.4602, aux.loss_ce: 0.4114, aux.acc_seg: 67.1062, loss: 1.2597
2023-02-11 11:46:16,497 - mmseg - INFO - Iter [1500/10000]	lr: 8.654e-03, eta: 1:01:48, time: 0.385, data_time: 0.045, memory: 19893, decode.loss_ce: 0.8014, decode.acc_seg: 73.4890, aux.loss_ce: 0.3964, aux.acc_seg: 68.6650, loss: 1.1978
2023-02-11 11:46:33,666 - mmseg - INFO - Iter [1550/10000]	lr: 8.608e-03, eta: 1:01:01, time: 0.343, data_time: 0.003, memory: 19893, decode.loss_ce: 0.8432, decode.acc_seg: 73.5507, aux.loss_ce: 0.4179, aux.acc_seg: 68.4909, loss: 1.2611
2023-02-11 11:46:50,858 - mmseg - INFO - Iter [1600/10000]	lr: 8.563e-03, eta: 1:00:15, time: 0.344, data_time: 0.003, memory: 19893, decode.loss_ce: 0.7725, decode.acc_seg: 74.9808, aux.loss_ce: 0.3959, aux.acc_seg: 68.8250, loss: 1.1684
2023-02-11 11:47:08,068 - mmseg - INFO - Iter [1650/10000]	lr: 8.518e-03, eta: 0:59:32, time: 0.344, data_time: 0.003, memory: 19893, decode.loss_ce: 0.8537, decode.acc_seg: 71.1426, aux.loss_ce: 0.4232, aux.acc_seg: 66.3519, loss: 1.2769
2023-02-11 11:47:25,255 - mmseg - INFO - Iter [1700/10000]	lr: 8.472e-03, eta: 0:58:50, time: 0.344, data_time: 0.003, memory: 19893, decode.loss_ce: 0.8310, decode.acc_seg: 71.4339, aux.loss_ce: 0.4248, aux.acc_seg: 66.7870, loss: 1.2558
2023-02-11 11:47:42,441 - mmseg - INFO - Iter [1750/10000]	lr: 8.427e-03, eta: 0:58:10, time: 0.344, data_time: 0.003, memory: 19893, decode.loss_ce: 0.8149, decode.acc_seg: 71.7262, aux.loss_ce: 0.4012, aux.acc_seg: 68.4969, loss: 1.2161
2023-02-11 11:47:59,590 - mmseg - INFO - Iter [1800/10000]	lr: 8.382e-03, eta: 0:57:30, time: 0.343, data_time: 0.003, memory: 19893, decode.loss_ce: 0.7759, decode.acc_seg: 72.8286, aux.loss_ce: 0.3802, aux.acc_seg: 69.3737, loss: 1.1561
2023-02-11 11:48:18,851 - mmseg - INFO - Iter [1850/10000]	lr: 8.336e-03, eta: 0:57:01, time: 0.385, data_time: 0.045, memory: 19893, decode.loss_ce: 0.6845, decode.acc_seg: 76.7100, aux.loss_ce: 0.3588, aux.acc_seg: 71.4178, loss: 1.0433
2023-02-11 11:48:36,018 - mmseg - INFO - Iter [1900/10000]	lr: 8.291e-03, eta: 0:56:24, time: 0.343, data_time: 0.003, memory: 19893, decode.loss_ce: 0.7790, decode.acc_seg: 73.9453, aux.loss_ce: 0.4021, aux.acc_seg: 68.2362, loss: 1.1811
2023-02-11 11:48:53,199 - mmseg - INFO - Iter [1950/10000]	lr: 8.245e-03, eta: 0:55:48, time: 0.344, data_time: 0.003, memory: 19893, decode.loss_ce: 0.7347, decode.acc_seg: 74.3573, aux.loss_ce: 0.3689, aux.acc_seg: 69.9134, loss: 1.1036
2023-02-11 11:49:10,365 - mmseg - INFO - Saving checkpoint at 2000 iterations
2023-02-11 11:49:11,017 - mmseg - INFO - Exp name: config_voc.py
2023-02-11 11:49:11,017 - mmseg - INFO - Iter [2000/10000]	lr: 8.200e-03, eta: 0:55:15, time: 0.357, data_time: 0.003, memory: 19893, decode.loss_ce: 0.7174, decode.acc_seg: 75.2113, aux.loss_ce: 0.3887, aux.acc_seg: 68.9116, loss: 1.1061
2023-02-11 11:50:13,755 - mmseg - INFO - per class results:
2023-02-11 11:50:13,756 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  background |  77.3 | 83.66 |
|  aeroplane  | 35.97 | 37.98 |
|   bicycle   | 18.79 | 69.11 |
|     bird    |  17.1 | 17.93 |
|     boat    | 35.35 | 49.03 |
|    bottle   |  5.62 |  5.62 |
|     bus     | 58.18 | 70.48 |
|     car     | 47.98 | 61.79 |
|     cat     |  17.4 | 82.45 |
|    chair    |  4.86 |  5.06 |
|     cow     |  0.51 |  0.51 |
| diningtable | 16.78 | 17.57 |
|     dog     | 19.66 |  68.5 |
|    horse    | 18.36 | 34.79 |
|  motorbike  | 31.27 | 81.54 |
|    person   | 42.05 | 48.06 |
| pottedplant | 16.12 | 25.54 |
|    sheep    | 18.62 | 21.03 |
|     sofa    | 19.41 | 22.83 |
|    train    | 52.06 |  58.7 |
|  tvmonitor  | 24.29 | 29.19 |
+-------------+-------+-------+
2023-02-11 11:50:13,756 - mmseg - INFO - Summary:
2023-02-11 11:50:13,756 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 73.64 | 27.51 | 42.45 |
+-------+-------+-------+
2023-02-11 11:50:13,757 - mmseg - INFO - Exp name: config_voc.py
2023-02-11 11:50:13,757 - mmseg - INFO - Iter(val) [1449]	aAcc: 0.7364, mIoU: 0.2751, mAcc: 0.4245, IoU.background: 0.7730, IoU.aeroplane: 0.3597, IoU.bicycle: 0.1879, IoU.bird: 0.1710, IoU.boat: 0.3535, IoU.bottle: 0.0562, IoU.bus: 0.5818, IoU.car: 0.4798, IoU.cat: 0.1740, IoU.chair: 0.0486, IoU.cow: 0.0051, IoU.diningtable: 0.1678, IoU.dog: 0.1966, IoU.horse: 0.1836, IoU.motorbike: 0.3127, IoU.person: 0.4205, IoU.pottedplant: 0.1612, IoU.sheep: 0.1862, IoU.sofa: 0.1941, IoU.train: 0.5206, IoU.tvmonitor: 0.2429, Acc.background: 0.8366, Acc.aeroplane: 0.3798, Acc.bicycle: 0.6911, Acc.bird: 0.1793, Acc.boat: 0.4903, Acc.bottle: 0.0562, Acc.bus: 0.7048, Acc.car: 0.6179, Acc.cat: 0.8245, Acc.chair: 0.0506, Acc.cow: 0.0051, Acc.diningtable: 0.1757, Acc.dog: 0.6850, Acc.horse: 0.3479, Acc.motorbike: 0.8154, Acc.person: 0.4806, Acc.pottedplant: 0.2554, Acc.sheep: 0.2103, Acc.sofa: 0.2283, Acc.train: 0.5870, Acc.tvmonitor: 0.2919
2023-02-11 11:50:30,954 - mmseg - INFO - Iter [2050/10000]	lr: 8.154e-03, eta: 0:58:44, time: 1.598, data_time: 1.257, memory: 19893, decode.loss_ce: 0.7748, decode.acc_seg: 73.2061, aux.loss_ce: 0.4027, aux.acc_seg: 67.7177, loss: 1.1776
2023-02-11 11:50:48,148 - mmseg - INFO - Iter [2100/10000]	lr: 8.108e-03, eta: 0:58:03, time: 0.344, data_time: 0.003, memory: 19893, decode.loss_ce: 0.7592, decode.acc_seg: 74.3514, aux.loss_ce: 0.3847, aux.acc_seg: 69.4909, loss: 1.1439
2023-02-11 11:51:05,348 - mmseg - INFO - Iter [2150/10000]	lr: 8.063e-03, eta: 0:57:23, time: 0.344, data_time: 0.003, memory: 19893, decode.loss_ce: 0.6864, decode.acc_seg: 75.4821, aux.loss_ce: 0.4057, aux.acc_seg: 67.4049, loss: 1.0921
2023-02-11 11:51:24,601 - mmseg - INFO - Iter [2200/10000]	lr: 8.017e-03, eta: 0:56:52, time: 0.385, data_time: 0.045, memory: 19893, decode.loss_ce: 0.8194, decode.acc_seg: 70.7563, aux.loss_ce: 0.3902, aux.acc_seg: 67.6660, loss: 1.2096
2023-02-11 11:51:41,787 - mmseg - INFO - Iter [2250/10000]	lr: 7.971e-03, eta: 0:56:14, time: 0.344, data_time: 0.003, memory: 19893, decode.loss_ce: 0.6769, decode.acc_seg: 77.1390, aux.loss_ce: 0.3558, aux.acc_seg: 71.6148, loss: 1.0327
2023-02-11 11:51:58,966 - mmseg - INFO - Iter [2300/10000]	lr: 7.926e-03, eta: 0:55:37, time: 0.344, data_time: 0.003, memory: 19893, decode.loss_ce: 0.7024, decode.acc_seg: 75.5451, aux.loss_ce: 0.3819, aux.acc_seg: 70.2914, loss: 1.0843
2023-02-11 11:52:16,159 - mmseg - INFO - Iter [2350/10000]	lr: 7.880e-03, eta: 0:55:01, time: 0.344, data_time: 0.003, memory: 19893, decode.loss_ce: 0.6602, decode.acc_seg: 76.1212, aux.loss_ce: 0.3575, aux.acc_seg: 70.7220, loss: 1.0177
2023-02-11 11:52:33,368 - mmseg - INFO - Iter [2400/10000]	lr: 7.834e-03, eta: 0:54:25, time: 0.344, data_time: 0.003, memory: 19893, decode.loss_ce: 0.7429, decode.acc_seg: 74.3093, aux.loss_ce: 0.3887, aux.acc_seg: 68.7735, loss: 1.1317
2023-02-11 11:52:50,563 - mmseg - INFO - Iter [2450/10000]	lr: 7.788e-03, eta: 0:53:50, time: 0.344, data_time: 0.003, memory: 19893, decode.loss_ce: 0.6557, decode.acc_seg: 76.1114, aux.loss_ce: 0.3794, aux.acc_seg: 69.1365, loss: 1.0350
2023-02-11 11:53:07,759 - mmseg - INFO - Iter [2500/10000]	lr: 7.743e-03, eta: 0:53:16, time: 0.344, data_time: 0.003, memory: 19893, decode.loss_ce: 0.6998, decode.acc_seg: 76.3436, aux.loss_ce: 0.3835, aux.acc_seg: 69.8445, loss: 1.0833
2023-02-11 11:53:24,947 - mmseg - INFO - Iter [2550/10000]	lr: 7.697e-03, eta: 0:52:43, time: 0.344, data_time: 0.003, memory: 19893, decode.loss_ce: 0.6262, decode.acc_seg: 78.6332, aux.loss_ce: 0.3437, aux.acc_seg: 72.1638, loss: 0.9699
2023-02-11 11:53:44,204 - mmseg - INFO - Iter [2600/10000]	lr: 7.651e-03, eta: 0:52:16, time: 0.385, data_time: 0.045, memory: 19893, decode.loss_ce: 0.6302, decode.acc_seg: 77.3096, aux.loss_ce: 0.3678, aux.acc_seg: 69.8479, loss: 0.9980
2023-02-11 11:54:01,401 - mmseg - INFO - Iter [2650/10000]	lr: 7.605e-03, eta: 0:51:44, time: 0.344, data_time: 0.003, memory: 19893, decode.loss_ce: 0.6009, decode.acc_seg: 79.4219, aux.loss_ce: 0.3591, aux.acc_seg: 70.7474, loss: 0.9600
2023-02-11 11:54:18,592 - mmseg - INFO - Iter [2700/10000]	lr: 7.559e-03, eta: 0:51:12, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.5159, decode.acc_seg: 82.2398, aux.loss_ce: 0.3140, aux.acc_seg: 75.1897, loss: 0.8299
2023-02-11 11:54:35,775 - mmseg - INFO - Iter [2750/10000]	lr: 7.513e-03, eta: 0:50:41, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.6075, decode.acc_seg: 78.7681, aux.loss_ce: 0.3678, aux.acc_seg: 69.3228, loss: 0.9753
2023-02-11 11:54:52,964 - mmseg - INFO - Iter [2800/10000]	lr: 7.467e-03, eta: 0:50:10, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.6345, decode.acc_seg: 77.0115, aux.loss_ce: 0.3657, aux.acc_seg: 69.3357, loss: 1.0002
2023-02-11 11:55:10,167 - mmseg - INFO - Iter [2850/10000]	lr: 7.421e-03, eta: 0:49:40, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.6265, decode.acc_seg: 78.3651, aux.loss_ce: 0.3426, aux.acc_seg: 72.6349, loss: 0.9691
2023-02-11 11:55:27,358 - mmseg - INFO - Iter [2900/10000]	lr: 7.375e-03, eta: 0:49:10, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.6489, decode.acc_seg: 77.3571, aux.loss_ce: 0.3597, aux.acc_seg: 71.5630, loss: 1.0086
2023-02-11 11:55:46,664 - mmseg - INFO - Iter [2950/10000]	lr: 7.329e-03, eta: 0:48:46, time: 0.386, data_time: 0.047, memory: 19893, decode.loss_ce: 0.6248, decode.acc_seg: 77.7032, aux.loss_ce: 0.3526, aux.acc_seg: 71.5396, loss: 0.9774
2023-02-11 11:56:03,807 - mmseg - INFO - Saving checkpoint at 3000 iterations
2023-02-11 11:56:04,497 - mmseg - INFO - Exp name: config_voc.py
2023-02-11 11:56:04,497 - mmseg - INFO - Iter [3000/10000]	lr: 7.283e-03, eta: 0:48:18, time: 0.357, data_time: 0.004, memory: 19893, decode.loss_ce: 0.5428, decode.acc_seg: 81.5186, aux.loss_ce: 0.3324, aux.acc_seg: 72.6016, loss: 0.8752
2023-02-11 11:57:07,285 - mmseg - INFO - per class results:
2023-02-11 11:57:07,286 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  background | 85.16 | 93.37 |
|  aeroplane  | 65.74 | 74.79 |
|   bicycle   | 28.17 | 71.58 |
|     bird    | 31.39 | 36.33 |
|     boat    | 35.59 | 42.14 |
|    bottle   | 44.26 | 55.74 |
|     bus     | 54.74 | 92.81 |
|     car     | 43.49 | 47.28 |
|     cat     | 51.04 | 64.79 |
|    chair    | 12.12 | 16.47 |
|     cow     | 48.01 | 61.26 |
| diningtable | 37.02 | 61.97 |
|     dog     | 38.84 | 52.13 |
|    horse    | 38.92 | 64.89 |
|  motorbike  | 46.48 | 57.09 |
|    person   | 60.05 | 68.26 |
| pottedplant |  26.6 | 36.15 |
|    sheep    | 23.37 | 67.96 |
|     sofa    |  6.69 |  7.47 |
|    train    | 53.78 | 67.38 |
|  tvmonitor  | 19.88 | 20.83 |
+-------------+-------+-------+
2023-02-11 11:57:07,286 - mmseg - INFO - Summary:
2023-02-11 11:57:07,286 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 83.78 | 40.54 | 55.27 |
+-------+-------+-------+
2023-02-11 11:57:07,286 - mmseg - INFO - Exp name: config_voc.py
2023-02-11 11:57:07,286 - mmseg - INFO - Iter(val) [1449]	aAcc: 0.8378, mIoU: 0.4054, mAcc: 0.5527, IoU.background: 0.8516, IoU.aeroplane: 0.6574, IoU.bicycle: 0.2817, IoU.bird: 0.3139, IoU.boat: 0.3559, IoU.bottle: 0.4426, IoU.bus: 0.5474, IoU.car: 0.4349, IoU.cat: 0.5104, IoU.chair: 0.1212, IoU.cow: 0.4801, IoU.diningtable: 0.3702, IoU.dog: 0.3884, IoU.horse: 0.3892, IoU.motorbike: 0.4648, IoU.person: 0.6005, IoU.pottedplant: 0.2660, IoU.sheep: 0.2337, IoU.sofa: 0.0669, IoU.train: 0.5378, IoU.tvmonitor: 0.1988, Acc.background: 0.9337, Acc.aeroplane: 0.7479, Acc.bicycle: 0.7158, Acc.bird: 0.3633, Acc.boat: 0.4214, Acc.bottle: 0.5574, Acc.bus: 0.9281, Acc.car: 0.4728, Acc.cat: 0.6479, Acc.chair: 0.1647, Acc.cow: 0.6126, Acc.diningtable: 0.6197, Acc.dog: 0.5213, Acc.horse: 0.6489, Acc.motorbike: 0.5709, Acc.person: 0.6826, Acc.pottedplant: 0.3615, Acc.sheep: 0.6796, Acc.sofa: 0.0747, Acc.train: 0.6738, Acc.tvmonitor: 0.2083
2023-02-11 11:57:24,486 - mmseg - INFO - Iter [3050/10000]	lr: 7.236e-03, eta: 0:50:13, time: 1.599, data_time: 1.259, memory: 19893, decode.loss_ce: 0.6829, decode.acc_seg: 76.5891, aux.loss_ce: 0.3793, aux.acc_seg: 69.6713, loss: 1.0622
2023-02-11 11:57:41,674 - mmseg - INFO - Iter [3100/10000]	lr: 7.190e-03, eta: 0:49:41, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.5147, decode.acc_seg: 82.9349, aux.loss_ce: 0.3152, aux.acc_seg: 74.0051, loss: 0.8299
2023-02-11 11:57:58,871 - mmseg - INFO - Iter [3150/10000]	lr: 7.144e-03, eta: 0:49:10, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.6447, decode.acc_seg: 78.6017, aux.loss_ce: 0.3608, aux.acc_seg: 70.9994, loss: 1.0054
2023-02-11 11:58:16,079 - mmseg - INFO - Iter [3200/10000]	lr: 7.098e-03, eta: 0:48:39, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.6369, decode.acc_seg: 78.0585, aux.loss_ce: 0.3796, aux.acc_seg: 70.2342, loss: 1.0165
2023-02-11 11:58:33,282 - mmseg - INFO - Iter [3250/10000]	lr: 7.051e-03, eta: 0:48:09, time: 0.344, data_time: 0.003, memory: 19893, decode.loss_ce: 0.6525, decode.acc_seg: 77.4710, aux.loss_ce: 0.3671, aux.acc_seg: 70.5564, loss: 1.0196
2023-02-11 11:58:52,601 - mmseg - INFO - Iter [3300/10000]	lr: 7.005e-03, eta: 0:47:43, time: 0.386, data_time: 0.046, memory: 19893, decode.loss_ce: 0.6277, decode.acc_seg: 78.6087, aux.loss_ce: 0.3661, aux.acc_seg: 69.3054, loss: 0.9938
2023-02-11 11:59:09,799 - mmseg - INFO - Iter [3350/10000]	lr: 6.959e-03, eta: 0:47:14, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.5623, decode.acc_seg: 79.6832, aux.loss_ce: 0.3652, aux.acc_seg: 70.4347, loss: 0.9275
2023-02-11 11:59:27,030 - mmseg - INFO - Iter [3400/10000]	lr: 6.912e-03, eta: 0:46:44, time: 0.345, data_time: 0.004, memory: 19893, decode.loss_ce: 0.5789, decode.acc_seg: 79.5212, aux.loss_ce: 0.3540, aux.acc_seg: 70.5153, loss: 0.9329
2023-02-11 11:59:44,236 - mmseg - INFO - Iter [3450/10000]	lr: 6.866e-03, eta: 0:46:15, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.5490, decode.acc_seg: 80.5511, aux.loss_ce: 0.3330, aux.acc_seg: 72.5890, loss: 0.8820
2023-02-11 12:00:01,442 - mmseg - INFO - Iter [3500/10000]	lr: 6.819e-03, eta: 0:45:47, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.6043, decode.acc_seg: 77.7646, aux.loss_ce: 0.3722, aux.acc_seg: 68.8934, loss: 0.9765
2023-02-11 12:00:18,651 - mmseg - INFO - Iter [3550/10000]	lr: 6.773e-03, eta: 0:45:19, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.5579, decode.acc_seg: 81.5060, aux.loss_ce: 0.3571, aux.acc_seg: 71.5542, loss: 0.9149
2023-02-11 12:00:35,866 - mmseg - INFO - Iter [3600/10000]	lr: 6.726e-03, eta: 0:44:51, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.5463, decode.acc_seg: 80.1449, aux.loss_ce: 0.3162, aux.acc_seg: 74.5191, loss: 0.8626
2023-02-11 12:00:53,077 - mmseg - INFO - Iter [3650/10000]	lr: 6.680e-03, eta: 0:44:23, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.6237, decode.acc_seg: 77.7005, aux.loss_ce: 0.3642, aux.acc_seg: 71.0190, loss: 0.9879
2023-02-11 12:01:12,341 - mmseg - INFO - Iter [3700/10000]	lr: 6.633e-03, eta: 0:43:59, time: 0.385, data_time: 0.046, memory: 19893, decode.loss_ce: 0.4673, decode.acc_seg: 84.3295, aux.loss_ce: 0.3151, aux.acc_seg: 74.4103, loss: 0.7824
2023-02-11 12:01:29,527 - mmseg - INFO - Iter [3750/10000]	lr: 6.586e-03, eta: 0:43:32, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.4718, decode.acc_seg: 83.6749, aux.loss_ce: 0.3077, aux.acc_seg: 74.4716, loss: 0.7795
2023-02-11 12:01:46,710 - mmseg - INFO - Iter [3800/10000]	lr: 6.539e-03, eta: 0:43:05, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.4750, decode.acc_seg: 82.8076, aux.loss_ce: 0.3162, aux.acc_seg: 73.8883, loss: 0.7912
2023-02-11 12:02:03,894 - mmseg - INFO - Iter [3850/10000]	lr: 6.493e-03, eta: 0:42:38, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.4468, decode.acc_seg: 83.2945, aux.loss_ce: 0.3113, aux.acc_seg: 74.1142, loss: 0.7581
2023-02-11 12:02:21,088 - mmseg - INFO - Iter [3900/10000]	lr: 6.446e-03, eta: 0:42:12, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.5378, decode.acc_seg: 80.1653, aux.loss_ce: 0.3548, aux.acc_seg: 70.5741, loss: 0.8926
2023-02-11 12:02:38,289 - mmseg - INFO - Iter [3950/10000]	lr: 6.399e-03, eta: 0:41:46, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.6048, decode.acc_seg: 79.4793, aux.loss_ce: 0.3732, aux.acc_seg: 70.4788, loss: 0.9780
2023-02-11 12:02:55,445 - mmseg - INFO - Saving checkpoint at 4000 iterations
2023-02-11 12:02:56,220 - mmseg - INFO - Exp name: config_voc.py
2023-02-11 12:02:56,220 - mmseg - INFO - Iter [4000/10000]	lr: 6.352e-03, eta: 0:41:21, time: 0.359, data_time: 0.004, memory: 19893, decode.loss_ce: 0.6198, decode.acc_seg: 77.4547, aux.loss_ce: 0.3861, aux.acc_seg: 68.1019, loss: 1.0059
2023-02-11 12:03:58,281 - mmseg - INFO - per class results:
2023-02-11 12:03:58,282 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  background | 81.15 | 84.89 |
|  aeroplane  |  62.3 | 75.98 |
|   bicycle   | 29.35 | 73.43 |
|     bird    |  39.1 | 58.08 |
|     boat    | 42.46 | 67.34 |
|    bottle   | 26.48 | 31.63 |
|     bus     | 60.12 | 89.15 |
|     car     | 38.64 |  90.1 |
|     cat     | 52.51 | 84.47 |
|    chair    | 11.34 | 47.97 |
|     cow     | 45.39 | 60.78 |
| diningtable | 28.23 | 72.58 |
|     dog     | 38.14 | 43.87 |
|    horse    | 41.38 | 52.49 |
|  motorbike  | 50.25 | 66.69 |
|    person   | 52.93 | 57.83 |
| pottedplant | 18.97 | 24.58 |
|    sheep    | 39.27 | 69.34 |
|     sofa    | 19.94 | 49.32 |
|    train    | 47.19 | 70.38 |
|  tvmonitor  | 26.75 | 76.21 |
+-------------+-------+-------+
2023-02-11 12:03:58,282 - mmseg - INFO - Summary:
2023-02-11 12:03:58,282 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 79.37 | 40.57 | 64.15 |
+-------+-------+-------+
2023-02-11 12:03:58,282 - mmseg - INFO - Exp name: config_voc.py
2023-02-11 12:03:58,283 - mmseg - INFO - Iter(val) [1449]	aAcc: 0.7937, mIoU: 0.4057, mAcc: 0.6415, IoU.background: 0.8115, IoU.aeroplane: 0.6230, IoU.bicycle: 0.2935, IoU.bird: 0.3910, IoU.boat: 0.4246, IoU.bottle: 0.2648, IoU.bus: 0.6012, IoU.car: 0.3864, IoU.cat: 0.5251, IoU.chair: 0.1134, IoU.cow: 0.4539, IoU.diningtable: 0.2823, IoU.dog: 0.3814, IoU.horse: 0.4138, IoU.motorbike: 0.5025, IoU.person: 0.5293, IoU.pottedplant: 0.1897, IoU.sheep: 0.3927, IoU.sofa: 0.1994, IoU.train: 0.4719, IoU.tvmonitor: 0.2675, Acc.background: 0.8489, Acc.aeroplane: 0.7598, Acc.bicycle: 0.7343, Acc.bird: 0.5808, Acc.boat: 0.6734, Acc.bottle: 0.3163, Acc.bus: 0.8915, Acc.car: 0.9010, Acc.cat: 0.8447, Acc.chair: 0.4797, Acc.cow: 0.6078, Acc.diningtable: 0.7258, Acc.dog: 0.4387, Acc.horse: 0.5249, Acc.motorbike: 0.6669, Acc.person: 0.5783, Acc.pottedplant: 0.2458, Acc.sheep: 0.6934, Acc.sofa: 0.4932, Acc.train: 0.7038, Acc.tvmonitor: 0.7621
2023-02-11 12:04:17,529 - mmseg - INFO - Iter [4050/10000]	lr: 6.305e-03, eta: 0:42:29, time: 1.626, data_time: 1.286, memory: 19893, decode.loss_ce: 0.4556, decode.acc_seg: 82.5698, aux.loss_ce: 0.3152, aux.acc_seg: 73.5717, loss: 0.7708
2023-02-11 12:04:34,711 - mmseg - INFO - Iter [4100/10000]	lr: 6.258e-03, eta: 0:42:02, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.4312, decode.acc_seg: 83.4725, aux.loss_ce: 0.3279, aux.acc_seg: 73.6654, loss: 0.7591
2023-02-11 12:04:51,898 - mmseg - INFO - Iter [4150/10000]	lr: 6.211e-03, eta: 0:41:34, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.4892, decode.acc_seg: 82.9957, aux.loss_ce: 0.3191, aux.acc_seg: 74.2621, loss: 0.8083
2023-02-11 12:05:09,090 - mmseg - INFO - Iter [4200/10000]	lr: 6.164e-03, eta: 0:41:07, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.5030, decode.acc_seg: 82.9058, aux.loss_ce: 0.3403, aux.acc_seg: 72.3630, loss: 0.8433
2023-02-11 12:05:26,282 - mmseg - INFO - Iter [4250/10000]	lr: 6.117e-03, eta: 0:40:40, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.5602, decode.acc_seg: 81.2437, aux.loss_ce: 0.3484, aux.acc_seg: 72.4861, loss: 0.9086
2023-02-11 12:05:43,480 - mmseg - INFO - Iter [4300/10000]	lr: 6.070e-03, eta: 0:40:14, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.5202, decode.acc_seg: 80.8233, aux.loss_ce: 0.3449, aux.acc_seg: 70.3733, loss: 0.8652
2023-02-11 12:06:00,663 - mmseg - INFO - Iter [4350/10000]	lr: 6.023e-03, eta: 0:39:48, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.5161, decode.acc_seg: 81.1809, aux.loss_ce: 0.3343, aux.acc_seg: 72.1862, loss: 0.8504
2023-02-11 12:06:19,962 - mmseg - INFO - Iter [4400/10000]	lr: 5.976e-03, eta: 0:39:24, time: 0.386, data_time: 0.046, memory: 19893, decode.loss_ce: 0.4743, decode.acc_seg: 83.3473, aux.loss_ce: 0.3443, aux.acc_seg: 71.7297, loss: 0.8187
2023-02-11 12:06:37,148 - mmseg - INFO - Iter [4450/10000]	lr: 5.929e-03, eta: 0:38:58, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.4690, decode.acc_seg: 83.4281, aux.loss_ce: 0.3129, aux.acc_seg: 73.9784, loss: 0.7819
2023-02-11 12:06:54,331 - mmseg - INFO - Iter [4500/10000]	lr: 5.881e-03, eta: 0:38:32, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.4152, decode.acc_seg: 83.6169, aux.loss_ce: 0.3005, aux.acc_seg: 73.5592, loss: 0.7157
2023-02-11 12:07:11,523 - mmseg - INFO - Iter [4550/10000]	lr: 5.834e-03, eta: 0:38:07, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.4835, decode.acc_seg: 83.6175, aux.loss_ce: 0.3644, aux.acc_seg: 69.9623, loss: 0.8479
2023-02-11 12:07:28,728 - mmseg - INFO - Iter [4600/10000]	lr: 5.787e-03, eta: 0:37:41, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.4168, decode.acc_seg: 85.3443, aux.loss_ce: 0.3141, aux.acc_seg: 74.6303, loss: 0.7309
2023-02-11 12:07:45,927 - mmseg - INFO - Iter [4650/10000]	lr: 5.739e-03, eta: 0:37:16, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.5397, decode.acc_seg: 80.3347, aux.loss_ce: 0.3552, aux.acc_seg: 71.4607, loss: 0.8949
2023-02-11 12:08:03,134 - mmseg - INFO - Iter [4700/10000]	lr: 5.692e-03, eta: 0:36:51, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.5018, decode.acc_seg: 81.9123, aux.loss_ce: 0.3365, aux.acc_seg: 71.8547, loss: 0.8383
2023-02-11 12:08:20,334 - mmseg - INFO - Iter [4750/10000]	lr: 5.644e-03, eta: 0:36:26, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.4490, decode.acc_seg: 82.3470, aux.loss_ce: 0.3172, aux.acc_seg: 73.9623, loss: 0.7662
2023-02-11 12:08:39,635 - mmseg - INFO - Iter [4800/10000]	lr: 5.597e-03, eta: 0:36:03, time: 0.386, data_time: 0.047, memory: 19893, decode.loss_ce: 0.4391, decode.acc_seg: 83.3630, aux.loss_ce: 0.3088, aux.acc_seg: 73.6619, loss: 0.7479
2023-02-11 12:08:56,820 - mmseg - INFO - Iter [4850/10000]	lr: 5.549e-03, eta: 0:35:39, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.4268, decode.acc_seg: 83.8552, aux.loss_ce: 0.3301, aux.acc_seg: 72.1294, loss: 0.7569
2023-02-11 12:09:14,018 - mmseg - INFO - Iter [4900/10000]	lr: 5.502e-03, eta: 0:35:14, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.4440, decode.acc_seg: 83.8992, aux.loss_ce: 0.3239, aux.acc_seg: 73.9807, loss: 0.7679
2023-02-11 12:09:31,213 - mmseg - INFO - Iter [4950/10000]	lr: 5.454e-03, eta: 0:34:50, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.4015, decode.acc_seg: 84.9217, aux.loss_ce: 0.3006, aux.acc_seg: 74.8064, loss: 0.7021
2023-02-11 12:09:48,379 - mmseg - INFO - Saving checkpoint at 5000 iterations
2023-02-11 12:09:49,105 - mmseg - INFO - Exp name: config_voc.py
2023-02-11 12:09:49,105 - mmseg - INFO - Iter [5000/10000]	lr: 5.406e-03, eta: 0:34:27, time: 0.358, data_time: 0.004, memory: 19893, decode.loss_ce: 0.3639, decode.acc_seg: 86.3362, aux.loss_ce: 0.3045, aux.acc_seg: 74.8534, loss: 0.6685
2023-02-11 12:10:51,225 - mmseg - INFO - per class results:
2023-02-11 12:10:51,226 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  background | 83.24 | 86.79 |
|  aeroplane  | 70.95 | 85.58 |
|   bicycle   | 33.79 | 66.98 |
|     bird    | 37.87 | 70.68 |
|     boat    | 42.47 | 70.77 |
|    bottle   | 38.63 |  64.4 |
|     bus     | 73.23 | 84.55 |
|     car     | 60.95 |  70.8 |
|     cat     | 60.15 | 86.18 |
|    chair    | 15.31 | 23.38 |
|     cow     | 31.95 | 85.68 |
| diningtable | 31.87 |  79.0 |
|     dog     |  42.6 | 53.16 |
|    horse    | 45.51 | 60.13 |
|  motorbike  |  56.5 | 88.67 |
|    person   |  65.1 | 76.49 |
| pottedplant | 15.85 | 72.71 |
|    sheep    | 30.08 | 67.85 |
|     sofa    | 25.02 | 33.23 |
|    train    | 67.13 |  78.5 |
|  tvmonitor  | 36.75 | 62.27 |
+-------------+-------+-------+
2023-02-11 12:10:51,226 - mmseg - INFO - Summary:
2023-02-11 12:10:51,226 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 82.57 | 45.95 | 69.89 |
+-------+-------+-------+
2023-02-11 12:10:51,226 - mmseg - INFO - Exp name: config_voc.py
2023-02-11 12:10:51,226 - mmseg - INFO - Iter(val) [1449]	aAcc: 0.8257, mIoU: 0.4595, mAcc: 0.6989, IoU.background: 0.8324, IoU.aeroplane: 0.7095, IoU.bicycle: 0.3379, IoU.bird: 0.3787, IoU.boat: 0.4247, IoU.bottle: 0.3863, IoU.bus: 0.7323, IoU.car: 0.6095, IoU.cat: 0.6015, IoU.chair: 0.1531, IoU.cow: 0.3195, IoU.diningtable: 0.3187, IoU.dog: 0.4260, IoU.horse: 0.4551, IoU.motorbike: 0.5650, IoU.person: 0.6510, IoU.pottedplant: 0.1585, IoU.sheep: 0.3008, IoU.sofa: 0.2502, IoU.train: 0.6713, IoU.tvmonitor: 0.3675, Acc.background: 0.8679, Acc.aeroplane: 0.8558, Acc.bicycle: 0.6698, Acc.bird: 0.7068, Acc.boat: 0.7077, Acc.bottle: 0.6440, Acc.bus: 0.8455, Acc.car: 0.7080, Acc.cat: 0.8618, Acc.chair: 0.2338, Acc.cow: 0.8568, Acc.diningtable: 0.7900, Acc.dog: 0.5316, Acc.horse: 0.6013, Acc.motorbike: 0.8867, Acc.person: 0.7649, Acc.pottedplant: 0.7271, Acc.sheep: 0.6785, Acc.sofa: 0.3323, Acc.train: 0.7850, Acc.tvmonitor: 0.6227
2023-02-11 12:11:08,439 - mmseg - INFO - Iter [5050/10000]	lr: 5.358e-03, eta: 0:35:03, time: 1.586, data_time: 1.246, memory: 19893, decode.loss_ce: 0.4248, decode.acc_seg: 85.7131, aux.loss_ce: 0.3177, aux.acc_seg: 73.7538, loss: 0.7424
2023-02-11 12:11:25,650 - mmseg - INFO - Iter [5100/10000]	lr: 5.311e-03, eta: 0:34:38, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.4794, decode.acc_seg: 83.0369, aux.loss_ce: 0.3205, aux.acc_seg: 73.7444, loss: 0.7999
2023-02-11 12:11:44,968 - mmseg - INFO - Iter [5150/10000]	lr: 5.263e-03, eta: 0:34:15, time: 0.386, data_time: 0.046, memory: 19893, decode.loss_ce: 0.4463, decode.acc_seg: 83.2410, aux.loss_ce: 0.3232, aux.acc_seg: 72.8975, loss: 0.7695
2023-02-11 12:12:02,187 - mmseg - INFO - Iter [5200/10000]	lr: 5.215e-03, eta: 0:33:50, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.3933, decode.acc_seg: 85.2029, aux.loss_ce: 0.2965, aux.acc_seg: 74.6658, loss: 0.6898
2023-02-11 12:12:19,413 - mmseg - INFO - Iter [5250/10000]	lr: 5.167e-03, eta: 0:33:26, time: 0.345, data_time: 0.004, memory: 19893, decode.loss_ce: 0.4175, decode.acc_seg: 84.2689, aux.loss_ce: 0.2962, aux.acc_seg: 74.6944, loss: 0.7137
2023-02-11 12:12:36,644 - mmseg - INFO - Iter [5300/10000]	lr: 5.119e-03, eta: 0:33:01, time: 0.345, data_time: 0.004, memory: 19893, decode.loss_ce: 0.4178, decode.acc_seg: 83.9745, aux.loss_ce: 0.3232, aux.acc_seg: 73.2042, loss: 0.7410
2023-02-11 12:12:53,883 - mmseg - INFO - Iter [5350/10000]	lr: 5.071e-03, eta: 0:32:37, time: 0.345, data_time: 0.004, memory: 19893, decode.loss_ce: 0.4610, decode.acc_seg: 83.2156, aux.loss_ce: 0.3396, aux.acc_seg: 71.8904, loss: 0.8006
2023-02-11 12:13:11,124 - mmseg - INFO - Iter [5400/10000]	lr: 5.023e-03, eta: 0:32:12, time: 0.345, data_time: 0.004, memory: 19893, decode.loss_ce: 0.4270, decode.acc_seg: 84.9297, aux.loss_ce: 0.3156, aux.acc_seg: 74.3645, loss: 0.7426
2023-02-11 12:13:28,353 - mmseg - INFO - Iter [5450/10000]	lr: 4.975e-03, eta: 0:31:48, time: 0.345, data_time: 0.004, memory: 19893, decode.loss_ce: 0.4655, decode.acc_seg: 82.2356, aux.loss_ce: 0.3053, aux.acc_seg: 74.9864, loss: 0.7708
2023-02-11 12:13:47,664 - mmseg - INFO - Iter [5500/10000]	lr: 4.926e-03, eta: 0:31:26, time: 0.386, data_time: 0.046, memory: 19893, decode.loss_ce: 0.4434, decode.acc_seg: 84.3027, aux.loss_ce: 0.3423, aux.acc_seg: 71.8185, loss: 0.7857
2023-02-11 12:14:04,872 - mmseg - INFO - Iter [5550/10000]	lr: 4.878e-03, eta: 0:31:02, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.3605, decode.acc_seg: 87.0092, aux.loss_ce: 0.2821, aux.acc_seg: 75.9029, loss: 0.6426
2023-02-11 12:14:22,096 - mmseg - INFO - Iter [5600/10000]	lr: 4.830e-03, eta: 0:30:38, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.3592, decode.acc_seg: 87.3760, aux.loss_ce: 0.2991, aux.acc_seg: 75.7212, loss: 0.6583
2023-02-11 12:14:39,332 - mmseg - INFO - Iter [5650/10000]	lr: 4.781e-03, eta: 0:30:14, time: 0.345, data_time: 0.004, memory: 19893, decode.loss_ce: 0.4643, decode.acc_seg: 83.6435, aux.loss_ce: 0.3386, aux.acc_seg: 71.9595, loss: 0.8029
2023-02-11 12:14:56,558 - mmseg - INFO - Iter [5700/10000]	lr: 4.733e-03, eta: 0:29:51, time: 0.345, data_time: 0.004, memory: 19893, decode.loss_ce: 0.3955, decode.acc_seg: 85.5095, aux.loss_ce: 0.3196, aux.acc_seg: 73.2408, loss: 0.7151
2023-02-11 12:15:13,790 - mmseg - INFO - Iter [5750/10000]	lr: 4.684e-03, eta: 0:29:27, time: 0.345, data_time: 0.004, memory: 19893, decode.loss_ce: 0.3220, decode.acc_seg: 88.2093, aux.loss_ce: 0.2853, aux.acc_seg: 76.5414, loss: 0.6073
2023-02-11 12:15:31,016 - mmseg - INFO - Iter [5800/10000]	lr: 4.636e-03, eta: 0:29:04, time: 0.345, data_time: 0.004, memory: 19893, decode.loss_ce: 0.3424, decode.acc_seg: 87.7702, aux.loss_ce: 0.2870, aux.acc_seg: 76.2990, loss: 0.6295
2023-02-11 12:15:48,248 - mmseg - INFO - Iter [5850/10000]	lr: 4.587e-03, eta: 0:28:41, time: 0.345, data_time: 0.004, memory: 19893, decode.loss_ce: 0.3643, decode.acc_seg: 87.1745, aux.loss_ce: 0.2942, aux.acc_seg: 75.2593, loss: 0.6586
2023-02-11 12:16:07,511 - mmseg - INFO - Iter [5900/10000]	lr: 4.538e-03, eta: 0:28:19, time: 0.385, data_time: 0.045, memory: 19893, decode.loss_ce: 0.3040, decode.acc_seg: 88.3609, aux.loss_ce: 0.2750, aux.acc_seg: 77.6895, loss: 0.5790
2023-02-11 12:16:24,720 - mmseg - INFO - Iter [5950/10000]	lr: 4.490e-03, eta: 0:27:56, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.3587, decode.acc_seg: 86.7603, aux.loss_ce: 0.3026, aux.acc_seg: 74.9750, loss: 0.6612
2023-02-11 12:16:41,922 - mmseg - INFO - Saving checkpoint at 6000 iterations
2023-02-11 12:16:42,652 - mmseg - INFO - Exp name: config_voc.py
2023-02-11 12:16:42,652 - mmseg - INFO - Iter [6000/10000]	lr: 4.441e-03, eta: 0:27:33, time: 0.359, data_time: 0.004, memory: 19893, decode.loss_ce: 0.3424, decode.acc_seg: 87.4059, aux.loss_ce: 0.3074, aux.acc_seg: 73.6550, loss: 0.6498
2023-02-11 12:17:45,243 - mmseg - INFO - per class results:
2023-02-11 12:17:45,245 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  background | 86.43 | 90.54 |
|  aeroplane  |  71.8 | 81.41 |
|   bicycle   | 38.16 | 62.83 |
|     bird    | 51.21 | 69.06 |
|     boat    | 48.78 | 59.87 |
|    bottle   | 36.39 | 46.61 |
|     bus     | 79.41 | 94.83 |
|     car     | 70.32 |  80.0 |
|     cat     | 62.57 | 68.84 |
|    chair    | 15.05 | 25.92 |
|     cow     | 56.67 | 73.43 |
| diningtable | 46.57 | 70.96 |
|     dog     | 51.94 | 81.03 |
|    horse    | 56.67 | 78.15 |
|  motorbike  | 56.73 | 89.25 |
|    person   | 66.72 | 72.45 |
| pottedplant | 18.43 | 68.96 |
|    sheep    | 41.87 | 85.19 |
|     sofa    | 30.22 | 41.02 |
|    train    | 51.42 | 86.17 |
|  tvmonitor  | 34.16 | 80.26 |
+-------------+-------+-------+
2023-02-11 12:17:45,245 - mmseg - INFO - Summary:
2023-02-11 12:17:45,245 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 85.79 | 51.03 | 71.75 |
+-------+-------+-------+
2023-02-11 12:17:45,245 - mmseg - INFO - Exp name: config_voc.py
2023-02-11 12:17:45,245 - mmseg - INFO - Iter(val) [1449]	aAcc: 0.8579, mIoU: 0.5103, mAcc: 0.7175, IoU.background: 0.8643, IoU.aeroplane: 0.7180, IoU.bicycle: 0.3816, IoU.bird: 0.5121, IoU.boat: 0.4878, IoU.bottle: 0.3639, IoU.bus: 0.7941, IoU.car: 0.7032, IoU.cat: 0.6257, IoU.chair: 0.1505, IoU.cow: 0.5667, IoU.diningtable: 0.4657, IoU.dog: 0.5194, IoU.horse: 0.5667, IoU.motorbike: 0.5673, IoU.person: 0.6672, IoU.pottedplant: 0.1843, IoU.sheep: 0.4187, IoU.sofa: 0.3022, IoU.train: 0.5142, IoU.tvmonitor: 0.3416, Acc.background: 0.9054, Acc.aeroplane: 0.8141, Acc.bicycle: 0.6283, Acc.bird: 0.6906, Acc.boat: 0.5987, Acc.bottle: 0.4661, Acc.bus: 0.9483, Acc.car: 0.8000, Acc.cat: 0.6884, Acc.chair: 0.2592, Acc.cow: 0.7343, Acc.diningtable: 0.7096, Acc.dog: 0.8103, Acc.horse: 0.7815, Acc.motorbike: 0.8925, Acc.person: 0.7245, Acc.pottedplant: 0.6896, Acc.sheep: 0.8519, Acc.sofa: 0.4102, Acc.train: 0.8617, Acc.tvmonitor: 0.8026
2023-02-11 12:18:02,488 - mmseg - INFO - Iter [6050/10000]	lr: 4.392e-03, eta: 0:27:51, time: 1.596, data_time: 1.255, memory: 19893, decode.loss_ce: 0.3743, decode.acc_seg: 85.7545, aux.loss_ce: 0.3120, aux.acc_seg: 73.7359, loss: 0.6863
2023-02-11 12:18:19,705 - mmseg - INFO - Iter [6100/10000]	lr: 4.343e-03, eta: 0:27:27, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.3615, decode.acc_seg: 86.7953, aux.loss_ce: 0.2952, aux.acc_seg: 75.7738, loss: 0.6567
2023-02-11 12:18:36,925 - mmseg - INFO - Iter [6150/10000]	lr: 4.294e-03, eta: 0:27:04, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.3815, decode.acc_seg: 86.5840, aux.loss_ce: 0.3007, aux.acc_seg: 75.3476, loss: 0.6822
2023-02-11 12:18:54,145 - mmseg - INFO - Iter [6200/10000]	lr: 4.245e-03, eta: 0:26:40, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.4449, decode.acc_seg: 84.0186, aux.loss_ce: 0.3334, aux.acc_seg: 74.1272, loss: 0.7783
2023-02-11 12:19:13,427 - mmseg - INFO - Iter [6250/10000]	lr: 4.196e-03, eta: 0:26:18, time: 0.386, data_time: 0.046, memory: 19893, decode.loss_ce: 0.3248, decode.acc_seg: 88.6678, aux.loss_ce: 0.2776, aux.acc_seg: 77.9868, loss: 0.6024
2023-02-11 12:19:30,633 - mmseg - INFO - Iter [6300/10000]	lr: 4.147e-03, eta: 0:25:55, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.3185, decode.acc_seg: 88.6148, aux.loss_ce: 0.3000, aux.acc_seg: 75.2212, loss: 0.6185
2023-02-11 12:19:47,835 - mmseg - INFO - Iter [6350/10000]	lr: 4.098e-03, eta: 0:25:32, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.3153, decode.acc_seg: 88.2278, aux.loss_ce: 0.2777, aux.acc_seg: 75.5662, loss: 0.5930
2023-02-11 12:20:05,039 - mmseg - INFO - Iter [6400/10000]	lr: 4.048e-03, eta: 0:25:09, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.3234, decode.acc_seg: 88.0949, aux.loss_ce: 0.2947, aux.acc_seg: 75.5231, loss: 0.6181
2023-02-11 12:20:22,258 - mmseg - INFO - Iter [6450/10000]	lr: 3.999e-03, eta: 0:24:46, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.3165, decode.acc_seg: 88.5814, aux.loss_ce: 0.2983, aux.acc_seg: 75.2148, loss: 0.6148
2023-02-11 12:20:39,471 - mmseg - INFO - Iter [6500/10000]	lr: 3.950e-03, eta: 0:24:23, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.2942, decode.acc_seg: 88.7125, aux.loss_ce: 0.2781, aux.acc_seg: 75.7648, loss: 0.5723
2023-02-11 12:20:56,691 - mmseg - INFO - Iter [6550/10000]	lr: 3.900e-03, eta: 0:24:00, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.2961, decode.acc_seg: 89.3581, aux.loss_ce: 0.2526, aux.acc_seg: 79.7070, loss: 0.5487
2023-02-11 12:21:15,976 - mmseg - INFO - Iter [6600/10000]	lr: 3.850e-03, eta: 0:23:38, time: 0.386, data_time: 0.046, memory: 19893, decode.loss_ce: 0.3368, decode.acc_seg: 87.7629, aux.loss_ce: 0.2884, aux.acc_seg: 76.5890, loss: 0.6252
2023-02-11 12:21:33,183 - mmseg - INFO - Iter [6650/10000]	lr: 3.801e-03, eta: 0:23:15, time: 0.344, data_time: 0.003, memory: 19893, decode.loss_ce: 0.2930, decode.acc_seg: 89.2057, aux.loss_ce: 0.2819, aux.acc_seg: 76.3066, loss: 0.5748
2023-02-11 12:21:50,394 - mmseg - INFO - Iter [6700/10000]	lr: 3.751e-03, eta: 0:22:53, time: 0.344, data_time: 0.003, memory: 19893, decode.loss_ce: 0.3303, decode.acc_seg: 87.2868, aux.loss_ce: 0.3216, aux.acc_seg: 74.1482, loss: 0.6520
2023-02-11 12:22:07,614 - mmseg - INFO - Iter [6750/10000]	lr: 3.701e-03, eta: 0:22:30, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.2887, decode.acc_seg: 88.8522, aux.loss_ce: 0.2575, aux.acc_seg: 77.9812, loss: 0.5462
2023-02-11 12:22:24,840 - mmseg - INFO - Iter [6800/10000]	lr: 3.651e-03, eta: 0:22:08, time: 0.345, data_time: 0.004, memory: 19893, decode.loss_ce: 0.3226, decode.acc_seg: 87.9537, aux.loss_ce: 0.2953, aux.acc_seg: 76.1693, loss: 0.6179
2023-02-11 12:22:42,062 - mmseg - INFO - Iter [6850/10000]	lr: 3.601e-03, eta: 0:21:45, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.3116, decode.acc_seg: 88.2470, aux.loss_ce: 0.2757, aux.acc_seg: 77.4615, loss: 0.5872
2023-02-11 12:22:59,271 - mmseg - INFO - Iter [6900/10000]	lr: 3.551e-03, eta: 0:21:23, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.3205, decode.acc_seg: 88.0972, aux.loss_ce: 0.3051, aux.acc_seg: 74.2007, loss: 0.6256
2023-02-11 12:23:16,489 - mmseg - INFO - Iter [6950/10000]	lr: 3.501e-03, eta: 0:21:01, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.3192, decode.acc_seg: 88.3846, aux.loss_ce: 0.2902, aux.acc_seg: 76.6173, loss: 0.6095
2023-02-11 12:23:35,741 - mmseg - INFO - Saving checkpoint at 7000 iterations
2023-02-11 12:23:36,474 - mmseg - INFO - Exp name: config_voc.py
2023-02-11 12:23:36,474 - mmseg - INFO - Iter [7000/10000]	lr: 3.451e-03, eta: 0:20:40, time: 0.400, data_time: 0.046, memory: 19893, decode.loss_ce: 0.2922, decode.acc_seg: 89.6732, aux.loss_ce: 0.2807, aux.acc_seg: 76.5904, loss: 0.5729
2023-02-11 12:24:39,299 - mmseg - INFO - per class results:
2023-02-11 12:24:39,301 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  background | 85.86 | 88.51 |
|  aeroplane  | 77.82 | 89.35 |
|   bicycle   | 38.76 | 67.75 |
|     bird    | 55.38 | 72.32 |
|     boat    | 54.34 | 73.47 |
|    bottle   | 34.43 | 76.58 |
|     bus     |  74.9 | 80.37 |
|     car     | 70.49 | 88.08 |
|     cat     | 62.81 | 80.84 |
|    chair    | 18.38 | 38.88 |
|     cow     | 55.58 | 78.25 |
| diningtable | 47.61 | 73.05 |
|     dog     | 55.44 | 71.95 |
|    horse    | 59.01 | 78.67 |
|  motorbike  | 66.16 | 82.65 |
|    person   | 70.25 | 87.36 |
| pottedplant |  17.2 | 72.33 |
|    sheep    | 52.07 | 85.37 |
|     sofa    | 30.54 |  50.3 |
|    train    | 64.09 | 89.22 |
|  tvmonitor  | 41.28 | 81.03 |
+-------------+-------+-------+
2023-02-11 12:24:39,301 - mmseg - INFO - Summary:
2023-02-11 12:24:39,301 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 85.81 | 53.92 | 76.49 |
+-------+-------+-------+
2023-02-11 12:24:39,301 - mmseg - INFO - Exp name: config_voc.py
2023-02-11 12:24:39,301 - mmseg - INFO - Iter(val) [1449]	aAcc: 0.8581, mIoU: 0.5392, mAcc: 0.7649, IoU.background: 0.8586, IoU.aeroplane: 0.7782, IoU.bicycle: 0.3876, IoU.bird: 0.5538, IoU.boat: 0.5434, IoU.bottle: 0.3443, IoU.bus: 0.7490, IoU.car: 0.7049, IoU.cat: 0.6281, IoU.chair: 0.1838, IoU.cow: 0.5558, IoU.diningtable: 0.4761, IoU.dog: 0.5544, IoU.horse: 0.5901, IoU.motorbike: 0.6616, IoU.person: 0.7025, IoU.pottedplant: 0.1720, IoU.sheep: 0.5207, IoU.sofa: 0.3054, IoU.train: 0.6409, IoU.tvmonitor: 0.4128, Acc.background: 0.8851, Acc.aeroplane: 0.8935, Acc.bicycle: 0.6775, Acc.bird: 0.7232, Acc.boat: 0.7347, Acc.bottle: 0.7658, Acc.bus: 0.8037, Acc.car: 0.8808, Acc.cat: 0.8084, Acc.chair: 0.3888, Acc.cow: 0.7825, Acc.diningtable: 0.7305, Acc.dog: 0.7195, Acc.horse: 0.7867, Acc.motorbike: 0.8265, Acc.person: 0.8736, Acc.pottedplant: 0.7233, Acc.sheep: 0.8537, Acc.sofa: 0.5030, Acc.train: 0.8922, Acc.tvmonitor: 0.8103
2023-02-11 12:24:56,529 - mmseg - INFO - Iter [7050/10000]	lr: 3.401e-03, eta: 0:20:44, time: 1.600, data_time: 1.260, memory: 19893, decode.loss_ce: 0.2740, decode.acc_seg: 90.2650, aux.loss_ce: 0.2705, aux.acc_seg: 77.8005, loss: 0.5445
2023-02-11 12:25:13,735 - mmseg - INFO - Iter [7100/10000]	lr: 3.350e-03, eta: 0:20:21, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.3078, decode.acc_seg: 88.8020, aux.loss_ce: 0.2758, aux.acc_seg: 77.4078, loss: 0.5836
2023-02-11 12:25:30,954 - mmseg - INFO - Iter [7150/10000]	lr: 3.300e-03, eta: 0:19:59, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.2409, decode.acc_seg: 91.3989, aux.loss_ce: 0.2506, aux.acc_seg: 78.0040, loss: 0.4915
2023-02-11 12:25:48,182 - mmseg - INFO - Iter [7200/10000]	lr: 3.249e-03, eta: 0:19:36, time: 0.345, data_time: 0.004, memory: 19893, decode.loss_ce: 0.2672, decode.acc_seg: 90.1281, aux.loss_ce: 0.2782, aux.acc_seg: 76.8526, loss: 0.5454
2023-02-11 12:26:05,402 - mmseg - INFO - Iter [7250/10000]	lr: 3.199e-03, eta: 0:19:14, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.2380, decode.acc_seg: 91.5644, aux.loss_ce: 0.2377, aux.acc_seg: 80.1320, loss: 0.4757
2023-02-11 12:26:22,616 - mmseg - INFO - Iter [7300/10000]	lr: 3.148e-03, eta: 0:18:51, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.2457, decode.acc_seg: 90.7888, aux.loss_ce: 0.2766, aux.acc_seg: 77.6231, loss: 0.5223
2023-02-11 12:26:41,882 - mmseg - INFO - Iter [7350/10000]	lr: 3.097e-03, eta: 0:18:30, time: 0.385, data_time: 0.047, memory: 19893, decode.loss_ce: 0.3084, decode.acc_seg: 89.4593, aux.loss_ce: 0.2611, aux.acc_seg: 77.5925, loss: 0.5694
2023-02-11 12:26:59,017 - mmseg - INFO - Iter [7400/10000]	lr: 3.046e-03, eta: 0:18:08, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.2533, decode.acc_seg: 90.5696, aux.loss_ce: 0.2731, aux.acc_seg: 76.9134, loss: 0.5264
2023-02-11 12:27:16,169 - mmseg - INFO - Iter [7450/10000]	lr: 2.995e-03, eta: 0:17:45, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.2636, decode.acc_seg: 89.7210, aux.loss_ce: 0.2871, aux.acc_seg: 75.4668, loss: 0.5507
2023-02-11 12:27:33,296 - mmseg - INFO - Iter [7500/10000]	lr: 2.944e-03, eta: 0:17:23, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.2468, decode.acc_seg: 90.9843, aux.loss_ce: 0.2418, aux.acc_seg: 80.0009, loss: 0.4886
2023-02-11 12:27:50,439 - mmseg - INFO - Iter [7550/10000]	lr: 2.893e-03, eta: 0:17:01, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.1764, decode.acc_seg: 93.3692, aux.loss_ce: 0.2276, aux.acc_seg: 79.7786, loss: 0.4040
2023-02-11 12:28:07,584 - mmseg - INFO - Iter [7600/10000]	lr: 2.841e-03, eta: 0:16:39, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.2670, decode.acc_seg: 90.2546, aux.loss_ce: 0.2961, aux.acc_seg: 75.2476, loss: 0.5631
2023-02-11 12:28:24,744 - mmseg - INFO - Iter [7650/10000]	lr: 2.790e-03, eta: 0:16:17, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.2638, decode.acc_seg: 89.7977, aux.loss_ce: 0.2695, aux.acc_seg: 77.4193, loss: 0.5332
2023-02-11 12:28:43,979 - mmseg - INFO - Iter [7700/10000]	lr: 2.739e-03, eta: 0:15:56, time: 0.385, data_time: 0.046, memory: 19893, decode.loss_ce: 0.2518, decode.acc_seg: 91.0399, aux.loss_ce: 0.2576, aux.acc_seg: 78.5854, loss: 0.5093
2023-02-11 12:29:01,110 - mmseg - INFO - Iter [7750/10000]	lr: 2.687e-03, eta: 0:15:34, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.2609, decode.acc_seg: 90.0130, aux.loss_ce: 0.2572, aux.acc_seg: 77.7653, loss: 0.5181
2023-02-11 12:29:18,245 - mmseg - INFO - Iter [7800/10000]	lr: 2.635e-03, eta: 0:15:12, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.2315, decode.acc_seg: 91.1233, aux.loss_ce: 0.2497, aux.acc_seg: 79.5157, loss: 0.4812
2023-02-11 12:29:35,367 - mmseg - INFO - Iter [7850/10000]	lr: 2.583e-03, eta: 0:14:51, time: 0.342, data_time: 0.004, memory: 19893, decode.loss_ce: 0.1768, decode.acc_seg: 93.4056, aux.loss_ce: 0.2362, aux.acc_seg: 79.5494, loss: 0.4129
2023-02-11 12:29:52,511 - mmseg - INFO - Iter [7900/10000]	lr: 2.531e-03, eta: 0:14:29, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.2364, decode.acc_seg: 91.5244, aux.loss_ce: 0.2504, aux.acc_seg: 79.4233, loss: 0.4869
2023-02-11 12:30:09,668 - mmseg - INFO - Iter [7950/10000]	lr: 2.479e-03, eta: 0:14:07, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.2380, decode.acc_seg: 90.7491, aux.loss_ce: 0.2709, aux.acc_seg: 76.1234, loss: 0.5089
2023-02-11 12:30:26,777 - mmseg - INFO - Saving checkpoint at 8000 iterations
2023-02-11 12:30:27,530 - mmseg - INFO - Exp name: config_voc.py
2023-02-11 12:30:27,531 - mmseg - INFO - Iter [8000/10000]	lr: 2.427e-03, eta: 0:13:46, time: 0.358, data_time: 0.004, memory: 19893, decode.loss_ce: 0.2503, decode.acc_seg: 90.1925, aux.loss_ce: 0.2649, aux.acc_seg: 76.9026, loss: 0.5151
2023-02-11 12:31:30,285 - mmseg - INFO - per class results:
2023-02-11 12:31:30,286 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  background | 87.94 | 90.98 |
|  aeroplane  | 78.62 | 88.29 |
|   bicycle   | 44.82 | 80.52 |
|     bird    |  56.1 | 75.05 |
|     boat    | 52.38 | 76.03 |
|    bottle   | 42.36 | 73.27 |
|     bus     | 77.34 | 86.93 |
|     car     | 70.18 | 75.42 |
|     cat     | 68.85 | 91.72 |
|    chair    | 23.73 | 52.28 |
|     cow     | 62.58 | 85.16 |
| diningtable | 48.99 | 69.75 |
|     dog     | 56.82 | 67.59 |
|    horse    | 63.29 | 78.65 |
|  motorbike  |  67.2 | 88.36 |
|    person   | 73.88 | 84.99 |
| pottedplant | 24.18 | 59.65 |
|    sheep    | 57.89 | 87.03 |
|     sofa    | 33.06 | 50.28 |
|    train    | 65.76 | 89.57 |
|  tvmonitor  | 38.68 | 83.88 |
+-------------+-------+-------+
2023-02-11 12:31:30,286 - mmseg - INFO - Summary:
2023-02-11 12:31:30,286 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 87.82 | 56.89 | 77.88 |
+-------+-------+-------+
2023-02-11 12:31:30,286 - mmseg - INFO - Exp name: config_voc.py
2023-02-11 12:31:30,287 - mmseg - INFO - Iter(val) [1449]	aAcc: 0.8782, mIoU: 0.5689, mAcc: 0.7788, IoU.background: 0.8794, IoU.aeroplane: 0.7862, IoU.bicycle: 0.4482, IoU.bird: 0.5610, IoU.boat: 0.5238, IoU.bottle: 0.4236, IoU.bus: 0.7734, IoU.car: 0.7018, IoU.cat: 0.6885, IoU.chair: 0.2373, IoU.cow: 0.6258, IoU.diningtable: 0.4899, IoU.dog: 0.5682, IoU.horse: 0.6329, IoU.motorbike: 0.6720, IoU.person: 0.7388, IoU.pottedplant: 0.2418, IoU.sheep: 0.5789, IoU.sofa: 0.3306, IoU.train: 0.6576, IoU.tvmonitor: 0.3868, Acc.background: 0.9098, Acc.aeroplane: 0.8829, Acc.bicycle: 0.8052, Acc.bird: 0.7505, Acc.boat: 0.7603, Acc.bottle: 0.7327, Acc.bus: 0.8693, Acc.car: 0.7542, Acc.cat: 0.9172, Acc.chair: 0.5228, Acc.cow: 0.8516, Acc.diningtable: 0.6975, Acc.dog: 0.6759, Acc.horse: 0.7865, Acc.motorbike: 0.8836, Acc.person: 0.8499, Acc.pottedplant: 0.5965, Acc.sheep: 0.8703, Acc.sofa: 0.5028, Acc.train: 0.8957, Acc.tvmonitor: 0.8388
2023-02-11 12:31:47,427 - mmseg - INFO - Iter [8050/10000]	lr: 2.374e-03, eta: 0:13:40, time: 1.597, data_time: 1.258, memory: 19893, decode.loss_ce: 0.2050, decode.acc_seg: 92.4741, aux.loss_ce: 0.2336, aux.acc_seg: 80.2622, loss: 0.4385
2023-02-11 12:32:06,650 - mmseg - INFO - Iter [8100/10000]	lr: 2.322e-03, eta: 0:13:18, time: 0.384, data_time: 0.046, memory: 19893, decode.loss_ce: 0.2021, decode.acc_seg: 92.4594, aux.loss_ce: 0.2237, aux.acc_seg: 80.8961, loss: 0.4258
2023-02-11 12:32:23,787 - mmseg - INFO - Iter [8150/10000]	lr: 2.269e-03, eta: 0:12:56, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.1979, decode.acc_seg: 92.2035, aux.loss_ce: 0.2415, aux.acc_seg: 79.1649, loss: 0.4393
2023-02-11 12:32:40,929 - mmseg - INFO - Iter [8200/10000]	lr: 2.216e-03, eta: 0:12:34, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.1904, decode.acc_seg: 93.1580, aux.loss_ce: 0.2447, aux.acc_seg: 78.1362, loss: 0.4350
2023-02-11 12:32:58,084 - mmseg - INFO - Iter [8250/10000]	lr: 2.163e-03, eta: 0:12:13, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.2071, decode.acc_seg: 92.4325, aux.loss_ce: 0.2298, aux.acc_seg: 80.4654, loss: 0.4369
2023-02-11 12:33:15,238 - mmseg - INFO - Iter [8300/10000]	lr: 2.110e-03, eta: 0:11:51, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.2107, decode.acc_seg: 92.1741, aux.loss_ce: 0.2429, aux.acc_seg: 79.7385, loss: 0.4537
2023-02-11 12:33:32,385 - mmseg - INFO - Iter [8350/10000]	lr: 2.057e-03, eta: 0:11:29, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.2376, decode.acc_seg: 91.8278, aux.loss_ce: 0.2576, aux.acc_seg: 78.8484, loss: 0.4953
2023-02-11 12:33:49,527 - mmseg - INFO - Iter [8400/10000]	lr: 2.004e-03, eta: 0:11:08, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.2003, decode.acc_seg: 92.8265, aux.loss_ce: 0.2477, aux.acc_seg: 79.9107, loss: 0.4480
2023-02-11 12:34:08,745 - mmseg - INFO - Iter [8450/10000]	lr: 1.950e-03, eta: 0:10:46, time: 0.384, data_time: 0.046, memory: 19893, decode.loss_ce: 0.1979, decode.acc_seg: 92.6135, aux.loss_ce: 0.2559, aux.acc_seg: 77.8893, loss: 0.4539
2023-02-11 12:34:25,877 - mmseg - INFO - Iter [8500/10000]	lr: 1.896e-03, eta: 0:10:25, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.1929, decode.acc_seg: 93.0734, aux.loss_ce: 0.2267, aux.acc_seg: 81.0078, loss: 0.4196
2023-02-11 12:34:43,018 - mmseg - INFO - Iter [8550/10000]	lr: 1.842e-03, eta: 0:10:03, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.1540, decode.acc_seg: 94.5915, aux.loss_ce: 0.2021, aux.acc_seg: 82.5134, loss: 0.3562
2023-02-11 12:35:00,165 - mmseg - INFO - Iter [8600/10000]	lr: 1.788e-03, eta: 0:09:42, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.2035, decode.acc_seg: 92.6687, aux.loss_ce: 0.2569, aux.acc_seg: 79.0934, loss: 0.4604
2023-02-11 12:35:17,304 - mmseg - INFO - Iter [8650/10000]	lr: 1.734e-03, eta: 0:09:21, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.2134, decode.acc_seg: 92.3929, aux.loss_ce: 0.2469, aux.acc_seg: 78.8329, loss: 0.4603
2023-02-11 12:35:34,450 - mmseg - INFO - Iter [8700/10000]	lr: 1.679e-03, eta: 0:08:59, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.1600, decode.acc_seg: 94.4446, aux.loss_ce: 0.2041, aux.acc_seg: 82.8587, loss: 0.3641
2023-02-11 12:35:51,598 - mmseg - INFO - Iter [8750/10000]	lr: 1.625e-03, eta: 0:08:38, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.1914, decode.acc_seg: 92.9826, aux.loss_ce: 0.2381, aux.acc_seg: 79.2080, loss: 0.4296
2023-02-11 12:36:10,841 - mmseg - INFO - Iter [8800/10000]	lr: 1.570e-03, eta: 0:08:17, time: 0.385, data_time: 0.046, memory: 19893, decode.loss_ce: 0.2311, decode.acc_seg: 91.9732, aux.loss_ce: 0.2492, aux.acc_seg: 79.1077, loss: 0.4803
2023-02-11 12:36:27,992 - mmseg - INFO - Iter [8850/10000]	lr: 1.515e-03, eta: 0:07:56, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.1954, decode.acc_seg: 92.4452, aux.loss_ce: 0.2370, aux.acc_seg: 80.4258, loss: 0.4324
2023-02-11 12:36:45,146 - mmseg - INFO - Iter [8900/10000]	lr: 1.459e-03, eta: 0:07:35, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.1669, decode.acc_seg: 93.3856, aux.loss_ce: 0.2293, aux.acc_seg: 79.6344, loss: 0.3961
2023-02-11 12:37:02,294 - mmseg - INFO - Iter [8950/10000]	lr: 1.403e-03, eta: 0:07:14, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.1851, decode.acc_seg: 93.3409, aux.loss_ce: 0.2473, aux.acc_seg: 78.2074, loss: 0.4324
2023-02-11 12:37:19,411 - mmseg - INFO - Saving checkpoint at 9000 iterations
2023-02-11 12:37:20,148 - mmseg - INFO - Exp name: config_voc.py
2023-02-11 12:37:20,149 - mmseg - INFO - Iter [9000/10000]	lr: 1.347e-03, eta: 0:06:53, time: 0.358, data_time: 0.004, memory: 19893, decode.loss_ce: 0.1874, decode.acc_seg: 92.9917, aux.loss_ce: 0.2309, aux.acc_seg: 80.1638, loss: 0.4183
2023-02-11 12:38:22,590 - mmseg - INFO - per class results:
2023-02-11 12:38:22,591 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  background | 90.06 | 92.96 |
|  aeroplane  | 75.78 | 85.53 |
|   bicycle   | 46.09 | 87.02 |
|     bird    | 66.38 | 80.35 |
|     boat    | 59.79 |  75.1 |
|    bottle   | 50.27 | 69.28 |
|     bus     | 83.89 | 95.45 |
|     car     | 78.25 | 86.14 |
|     cat     | 77.17 | 90.19 |
|    chair    | 19.36 | 43.34 |
|     cow     | 62.21 | 79.03 |
| diningtable | 55.64 | 69.98 |
|     dog     | 66.72 | 78.17 |
|    horse    | 55.78 |  90.0 |
|  motorbike  | 72.63 |  92.8 |
|    person   | 75.12 | 82.19 |
| pottedplant | 30.21 | 63.13 |
|    sheep    | 56.67 | 84.36 |
|     sofa    | 29.95 | 47.88 |
|    train    | 72.13 | 94.48 |
|  tvmonitor  | 49.58 |  77.1 |
+-------------+-------+-------+
2023-02-11 12:38:22,591 - mmseg - INFO - Summary:
2023-02-11 12:38:22,591 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 89.64 | 60.65 | 79.26 |
+-------+-------+-------+
2023-02-11 12:38:22,592 - mmseg - INFO - Exp name: config_voc.py
2023-02-11 12:38:22,592 - mmseg - INFO - Iter(val) [1449]	aAcc: 0.8964, mIoU: 0.6065, mAcc: 0.7926, IoU.background: 0.9006, IoU.aeroplane: 0.7578, IoU.bicycle: 0.4609, IoU.bird: 0.6638, IoU.boat: 0.5979, IoU.bottle: 0.5027, IoU.bus: 0.8389, IoU.car: 0.7825, IoU.cat: 0.7717, IoU.chair: 0.1936, IoU.cow: 0.6221, IoU.diningtable: 0.5564, IoU.dog: 0.6672, IoU.horse: 0.5578, IoU.motorbike: 0.7263, IoU.person: 0.7512, IoU.pottedplant: 0.3021, IoU.sheep: 0.5667, IoU.sofa: 0.2995, IoU.train: 0.7213, IoU.tvmonitor: 0.4958, Acc.background: 0.9296, Acc.aeroplane: 0.8553, Acc.bicycle: 0.8702, Acc.bird: 0.8035, Acc.boat: 0.7510, Acc.bottle: 0.6928, Acc.bus: 0.9545, Acc.car: 0.8614, Acc.cat: 0.9019, Acc.chair: 0.4334, Acc.cow: 0.7903, Acc.diningtable: 0.6998, Acc.dog: 0.7817, Acc.horse: 0.9000, Acc.motorbike: 0.9280, Acc.person: 0.8219, Acc.pottedplant: 0.6313, Acc.sheep: 0.8436, Acc.sofa: 0.4788, Acc.train: 0.9448, Acc.tvmonitor: 0.7710
2023-02-11 12:38:39,740 - mmseg - INFO - Iter [9050/10000]	lr: 1.291e-03, eta: 0:06:38, time: 1.591, data_time: 1.252, memory: 19893, decode.loss_ce: 0.1570, decode.acc_seg: 94.3860, aux.loss_ce: 0.2180, aux.acc_seg: 81.0524, loss: 0.3750
2023-02-11 12:38:56,897 - mmseg - INFO - Iter [9100/10000]	lr: 1.235e-03, eta: 0:06:17, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.1810, decode.acc_seg: 93.0649, aux.loss_ce: 0.2257, aux.acc_seg: 81.2032, loss: 0.4067
2023-02-11 12:39:14,030 - mmseg - INFO - Iter [9150/10000]	lr: 1.178e-03, eta: 0:05:55, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.1774, decode.acc_seg: 93.3549, aux.loss_ce: 0.2242, aux.acc_seg: 80.3336, loss: 0.4016
2023-02-11 12:39:33,299 - mmseg - INFO - Iter [9200/10000]	lr: 1.121e-03, eta: 0:05:34, time: 0.385, data_time: 0.046, memory: 19893, decode.loss_ce: 0.1530, decode.acc_seg: 94.1623, aux.loss_ce: 0.2319, aux.acc_seg: 80.6609, loss: 0.3849
2023-02-11 12:39:50,440 - mmseg - INFO - Iter [9250/10000]	lr: 1.063e-03, eta: 0:05:13, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.1848, decode.acc_seg: 93.2833, aux.loss_ce: 0.2370, aux.acc_seg: 79.1165, loss: 0.4218
2023-02-11 12:40:07,584 - mmseg - INFO - Iter [9300/10000]	lr: 1.005e-03, eta: 0:04:52, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.1453, decode.acc_seg: 95.1248, aux.loss_ce: 0.2153, aux.acc_seg: 81.7152, loss: 0.3606
2023-02-11 12:40:24,728 - mmseg - INFO - Iter [9350/10000]	lr: 9.470e-04, eta: 0:04:31, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.2087, decode.acc_seg: 92.4307, aux.loss_ce: 0.2329, aux.acc_seg: 80.4151, loss: 0.4416
2023-02-11 12:40:41,880 - mmseg - INFO - Iter [9400/10000]	lr: 8.882e-04, eta: 0:04:10, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.1553, decode.acc_seg: 94.5767, aux.loss_ce: 0.2179, aux.acc_seg: 81.3532, loss: 0.3732
2023-02-11 12:40:59,033 - mmseg - INFO - Iter [9450/10000]	lr: 8.289e-04, eta: 0:03:49, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.1600, decode.acc_seg: 94.2298, aux.loss_ce: 0.2273, aux.acc_seg: 81.0242, loss: 0.3873
2023-02-11 12:41:16,182 - mmseg - INFO - Iter [9500/10000]	lr: 7.691e-04, eta: 0:03:28, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.1769, decode.acc_seg: 93.4718, aux.loss_ce: 0.2109, aux.acc_seg: 82.0710, loss: 0.3879
2023-02-11 12:41:35,432 - mmseg - INFO - Iter [9550/10000]	lr: 7.087e-04, eta: 0:03:07, time: 0.385, data_time: 0.046, memory: 19893, decode.loss_ce: 0.1870, decode.acc_seg: 93.7852, aux.loss_ce: 0.2230, aux.acc_seg: 81.4637, loss: 0.4100
2023-02-11 12:41:52,594 - mmseg - INFO - Iter [9600/10000]	lr: 6.476e-04, eta: 0:02:46, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.1600, decode.acc_seg: 94.5526, aux.loss_ce: 0.2347, aux.acc_seg: 80.5766, loss: 0.3947
2023-02-11 12:42:09,757 - mmseg - INFO - Iter [9650/10000]	lr: 5.857e-04, eta: 0:02:25, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.1738, decode.acc_seg: 94.0991, aux.loss_ce: 0.2129, aux.acc_seg: 83.0996, loss: 0.3867
2023-02-11 12:42:26,925 - mmseg - INFO - Iter [9700/10000]	lr: 5.230e-04, eta: 0:02:04, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.1889, decode.acc_seg: 93.3899, aux.loss_ce: 0.2365, aux.acc_seg: 79.2992, loss: 0.4254
2023-02-11 12:42:44,099 - mmseg - INFO - Iter [9750/10000]	lr: 4.592e-04, eta: 0:01:43, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.1441, decode.acc_seg: 94.5994, aux.loss_ce: 0.2377, aux.acc_seg: 79.2310, loss: 0.3818
2023-02-11 12:43:01,272 - mmseg - INFO - Iter [9800/10000]	lr: 3.941e-04, eta: 0:01:22, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.1610, decode.acc_seg: 93.9589, aux.loss_ce: 0.2202, aux.acc_seg: 80.9990, loss: 0.3811
2023-02-11 12:43:18,438 - mmseg - INFO - Iter [9850/10000]	lr: 3.274e-04, eta: 0:01:02, time: 0.343, data_time: 0.004, memory: 19893, decode.loss_ce: 0.1632, decode.acc_seg: 93.8963, aux.loss_ce: 0.2199, aux.acc_seg: 80.8310, loss: 0.3832
2023-02-11 12:43:37,736 - mmseg - INFO - Iter [9900/10000]	lr: 2.583e-04, eta: 0:00:41, time: 0.386, data_time: 0.047, memory: 19893, decode.loss_ce: 0.1583, decode.acc_seg: 94.2914, aux.loss_ce: 0.2014, aux.acc_seg: 82.3024, loss: 0.3598
2023-02-11 12:43:54,922 - mmseg - INFO - Iter [9950/10000]	lr: 1.856e-04, eta: 0:00:20, time: 0.344, data_time: 0.004, memory: 19893, decode.loss_ce: 0.1438, decode.acc_seg: 95.1431, aux.loss_ce: 0.2109, aux.acc_seg: 82.7657, loss: 0.3547
2023-02-11 12:44:12,047 - mmseg - INFO - Saving checkpoint at 10000 iterations
2023-02-11 12:44:12,802 - mmseg - INFO - Exp name: config_voc.py
2023-02-11 12:44:12,802 - mmseg - INFO - Iter [10000/10000]	lr: 1.025e-04, eta: 0:00:00, time: 0.358, data_time: 0.004, memory: 19893, decode.loss_ce: 0.1510, decode.acc_seg: 94.6226, aux.loss_ce: 0.2361, aux.acc_seg: 79.0953, loss: 0.3871
2023-02-11 12:45:15,393 - mmseg - INFO - per class results:
2023-02-11 12:45:15,394 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  background | 90.92 | 93.93 |
|  aeroplane  | 82.72 | 86.29 |
|   bicycle   | 51.08 | 80.78 |
|     bird    | 66.09 | 85.07 |
|     boat    | 57.16 | 70.96 |
|    bottle   | 53.76 | 72.45 |
|     bus     | 86.39 | 93.52 |
|     car     | 77.18 |  80.5 |
|     cat     | 75.02 | 88.13 |
|    chair    | 25.01 | 44.42 |
|     cow     | 62.47 | 84.41 |
| diningtable |  56.1 | 71.09 |
|     dog     |  63.9 | 72.04 |
|    horse    | 61.78 | 90.15 |
|  motorbike  | 74.53 | 93.18 |
|    person   | 76.69 | 86.27 |
| pottedplant | 31.88 | 63.76 |
|    sheep    | 64.63 | 80.07 |
|     sofa    | 38.02 |  58.0 |
|    train    | 73.34 | 94.45 |
|  tvmonitor  | 47.78 | 82.45 |
+-------------+-------+-------+
2023-02-11 12:45:15,394 - mmseg - INFO - Summary:
2023-02-11 12:45:15,394 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 90.55 | 62.69 | 79.62 |
+-------+-------+-------+
2023-02-11 12:45:15,394 - mmseg - INFO - Exp name: config_voc.py
2023-02-11 12:45:15,394 - mmseg - INFO - Iter(val) [1449]	aAcc: 0.9055, mIoU: 0.6269, mAcc: 0.7962, IoU.background: 0.9092, IoU.aeroplane: 0.8272, IoU.bicycle: 0.5108, IoU.bird: 0.6609, IoU.boat: 0.5716, IoU.bottle: 0.5376, IoU.bus: 0.8639, IoU.car: 0.7718, IoU.cat: 0.7502, IoU.chair: 0.2501, IoU.cow: 0.6247, IoU.diningtable: 0.5610, IoU.dog: 0.6390, IoU.horse: 0.6178, IoU.motorbike: 0.7453, IoU.person: 0.7669, IoU.pottedplant: 0.3188, IoU.sheep: 0.6463, IoU.sofa: 0.3802, IoU.train: 0.7334, IoU.tvmonitor: 0.4778, Acc.background: 0.9393, Acc.aeroplane: 0.8629, Acc.bicycle: 0.8078, Acc.bird: 0.8507, Acc.boat: 0.7096, Acc.bottle: 0.7245, Acc.bus: 0.9352, Acc.car: 0.8050, Acc.cat: 0.8813, Acc.chair: 0.4442, Acc.cow: 0.8441, Acc.diningtable: 0.7109, Acc.dog: 0.7204, Acc.horse: 0.9015, Acc.motorbike: 0.9318, Acc.person: 0.8627, Acc.pottedplant: 0.6376, Acc.sheep: 0.8007, Acc.sofa: 0.5800, Acc.train: 0.9445, Acc.tvmonitor: 0.8245
